{"xref": {
  "stories": [
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementPositive.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is not logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Geting Started page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "When User is logged to site (Getting Started)",
              "Then check that API key is provided for all placeholders on Getting Started page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is not logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - Interactive API Console page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "When User is logged to site (Interactive API Console)",
              "Then check that API key is provided for all placeholders on Interactive API Console page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is not logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - API Explorer) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "When User is logged to site (API Explorer)",
              "Then check that API key is provided for all placeholders on API Explorer page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is not logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Countdown Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "Then check that API key is provided for all placeholders on Countdown Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is not logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Event Discovery Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When User is logged to site (Event Discovery Widget)",
              "Then check that API key is provided for all placeholders on Event Discovery Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is not logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Calendar Widget) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When User is logged to site (Calendar Widget)",
              "Then check that API key is provided for all placeholders on Calendar Widget page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is not logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v2 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "When User is logged to site (Discovery API v2)",
              "Then check that API key is provided for all placeholders on Discovery API v2 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Placeholder is shown when user is not logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is not logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          },
          {
            "title": "(APi Key - Discovery API v1 page) Custom API key is shown when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "When User is logged to site (Discovery API v1)",
              "Then check that API key is provided for all placeholders on Discovery API v1 page"
            ]
          }
        ],
        "name": "APIKeyReplacementPositive.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DealsAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Deals API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DealsAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Deals API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Deals API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Deals API page",
                  "durationInMillis": 3821
                },
                {
                  "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 795
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 88
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Deals API page",
                "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4832
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_GeneralTermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test General Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_GeneralTermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test General Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open General Terms Of Use page",
              "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open General Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open General Terms Of Use page",
                  "durationInMillis": 4764
                },
                {
                  "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 254
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open General Terms Of Use page",
                "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5051
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_PartnerAPITermsOfUse.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Terms Of Use Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_PartnerAPITermsOfUse.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Terms Of Use Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API Terms Of Use page",
              "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API Terms Of Use page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API Terms Of Use page",
                  "durationInMillis": 4970
                },
                {
                  "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 191
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 46
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API Terms Of Use page",
                "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5213
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/CreateNewAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Create New Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page",
              "Then check general page elements for Pantheon Create New Account page"
            ]
          }
        ],
        "name": "CreateNewAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Create New Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Create New Account page from LogIn page",
              "Then check general page elements for Pantheon Create New Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/CreateNewAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 4110
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1079
                },
                {
                  "step": "When navigate to Pantheon Create New Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
                  "durationInMillis": 1071
                },
                {
                  "step": "Then check general page elements for Pantheon Create New Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
                  "durationInMillis": 20325
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 46
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Create New Account page from LogIn page",
                "Then check general page elements for Pantheon Create New Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 26647
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_WordPress.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test WordPress Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_WordPress.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test WordPress Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open WordPress Widget page",
              "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open WordPress Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open WordPress Widget page",
                  "durationInMillis": 4647
                },
                {
                  "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 200
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open WordPress Widget page",
                "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4874
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Home.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Home Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        ],
        "name": "Home.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Home Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/Home Page/) Verification for general page elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3439
                },
                {
                  "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20439
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for general page elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for twitter's list of events",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then check that Twitter's list of events is shown"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1622
                },
                {
                  "step": "Then check that Twitter's list of events is shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that Twitter's list of events is shown",
                  "durationInMillis": 33
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/Home Page/) Verification for twitter's list of events",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then check that Twitter's list of events is shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          },
          "storyPath": "stories/site/Home.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Your API Key"
                ],
                [
                  "pageURL",
                  "https://developer-acct.ticketmaster.com/user/login"
                ],
                [
                  "elementLocation",
                  "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 3371
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                    "durationInMillis": 930
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                    "durationInMillis": 131
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Review Documentation"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/getting-started/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2622
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                    "durationInMillis": 2147
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                    "durationInMillis": 121
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Explore The API"
                ],
                [
                  "pageURL",
                  "{url}/api-explorer/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1627
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                    "durationInMillis": 2351
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                    "durationInMillis": 91
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Android"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#android-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1912
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                    "durationInMillis": 156
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                    "durationInMillis": 5409
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Backend"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#backend-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 707
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                    "durationInMillis": 335
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                    "durationInMillis": 21
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "iOS"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#iOS-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 642
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                    "durationInMillis": 225
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                    "durationInMillis": 114
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Web"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/#web-projects"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 790
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                    "durationInMillis": 274
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                    "durationInMillis": 27
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Tech blog"
                ],
                [
                  "pageURL",
                  "https://tech.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//h1[@class='site-title']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1133
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                    "durationInMillis": 3061
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                    "durationInMillis": 47
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Medium Publication"
                ],
                [
                  "pageURL",
                  "https://medium.com/ticketmaster-tech"
                ],
                [
                  "elementLocation",
                  "//h2[text()='Because Engineers are Fans Too!']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1005
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                    "durationInMillis": 1298
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                    "durationInMillis": 34
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Partner API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/partner/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 1005
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                    "durationInMillis": 1548
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                    "durationInMillis": 87
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Deals API"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/apis/deals-api/"
                ],
                [
                  "elementLocation",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 867
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                    "durationInMillis": 1061
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                    "durationInMillis": 58
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Legacy docs"
                ],
                [
                  "pageURL",
                  "http://apidocs.ticketmaster.com/"
                ],
                [
                  "elementLocation",
                  "//td[@class='WikiLogoName']/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 776
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                    "durationInMillis": 1655
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                    "durationInMillis": 128
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/Home Page/) Verification for all the page links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "elementLocation"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Get Your API Key"
                      ],
                      [
                        "pageURL",
                        "https://developer-acct.ticketmaster.com/user/login"
                      ],
                      [
                        "elementLocation",
                        "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Review Documentation"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/getting-started/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Explore The API"
                      ],
                      [
                        "pageURL",
                        "{url}/api-explorer/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Android"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#android-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Backend"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#backend-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "iOS"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#iOS-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Web"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/#web-projects"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Tech blog"
                      ],
                      [
                        "pageURL",
                        "https://tech.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//h1[@class='site-title']/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Medium Publication"
                      ],
                      [
                        "pageURL",
                        "https://medium.com/ticketmaster-tech"
                      ],
                      [
                        "elementLocation",
                        "//h2[text()='Because Engineers are Fans Too!']"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Partner API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/partner/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Deals API"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/apis/deals-api/"
                      ],
                      [
                        "elementLocation",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Legacy docs"
                      ],
                      [
                        "pageURL",
                        "http://apidocs.ticketmaster.com/"
                      ],
                      [
                        "elementLocation",
                        "//td[@class='WikiLogoName']/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 63430
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/EditProfile.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Edit Profile Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          }
        ],
        "name": "EditProfile.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Edit Profile Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "When navigate to Pantheon Edit Profile page from User Account page",
              "Then check general page elements for Pantheon Edit Profile page"
            ]
          },
          "storyPath": "stories/site/pantheon/EditProfile.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2335
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 914
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 2237
                },
                {
                  "step": "When navigate to Pantheon Edit Profile page from User Account page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
                  "durationInMillis": 1892
                },
                {
                  "step": "Then check general page elements for Pantheon Edit Profile page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
                  "durationInMillis": 20392
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "When navigate to Pantheon Edit Profile page from User Account page",
                "Then check general page elements for Pantheon Edit Profile page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 27803
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserLogIn.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User LonIn Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "Then check general page elements for Pantheon User LonIn page"
            ]
          }
        ],
        "name": "UserLogIn.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User LonIn Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "Then check general page elements for Pantheon User LonIn page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserLogIn.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 3157
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 985
                },
                {
                  "step": "Then check general page elements for Pantheon User LonIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon User LonIn page",
                  "durationInMillis": 20230
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "Then check general page elements for Pantheon User LonIn page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24399
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/APIKeyReplacementNegative.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Key is NOT replaced on the page"
        },
        "meta": {
          "properties": [
            {
              "@name": "prod",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(APi Key - Commerce API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When User is logged to site (Commerce API)",
              "Then check that API key is provided for all placeholders on Commerce API page"
            ]
          },
          {
            "title": "(APi Key - Top Picks API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "When User is logged to site (Top Picks API)",
              "Then check that API key is provided for all placeholders on Top Picks API page"
            ]
          },
          {
            "title": "(APi Key - Season Ticketing API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "When User is logged to site (Season Ticketing API)",
              "Then check that API key is provided for all placeholders on Season Ticketing API page"
            ]
          },
          {
            "title": "(APi Key - International Discovery API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "When User is logged to site (International Discovery API)",
              "Then check that API key is provided for all placeholders on International Discovery API page"
            ]
          },
          {
            "title": "(APi Key - Publish API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "When User is logged to site (Publish API)",
              "Then check that API key is provided for all placeholders on Publish API page"
            ]
          },
          {
            "title": "(APi Key - Deals API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Deals API page",
              "When User is logged to site (Deals API)",
              "Then check that API key is provided for all placeholders on Deals API page"
            ]
          },
          {
            "title": "(APi Key - Partner API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "When User is logged to site (Partner API)",
              "Then check that API key is provided for all placeholders on Partner API page"
            ]
          },
          {
            "title": "(APi Key - Inventory Status API page) Custom API key is not replaced when user is logged in",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "When User is logged to site (Inventory Status API)",
              "Then check that API key is provided for all placeholder on Inventory Status API page"
            ]
          }
        ],
        "name": "APIKeyReplacementNegative.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Key is NOT replaced on the page",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v1 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV1.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v1 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v1 page",
              "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v1 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v1 page",
                  "durationInMillis": 1481
                },
                {
                  "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                    "cause": {
                      "@class": "org.junit.ComparisonFailure",
                      "detailMessage": "",
                      "stackTrace": [
                        "org.junit.Assert.assertEquals(Assert.java:115)",
                        "org.junit.Assert.assertEquals(Assert.java:144)",
                        "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps.checkIfTitleIsCorrect(PD_DiscoveryAPIv1Steps.java:25)",
                        "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps$$EnhancerByCGLIB$$98e4d262.CGLIB$checkIfTitleIsCorrect$1(<generated>)",
                        "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps$$EnhancerByCGLIB$$98e4d262$$FastClassByCGLIB$$d86197b2.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps$$EnhancerByCGLIB$$98e4d262.checkIfTitleIsCorrect(<generated>)",
                        "bla.tm.definitions.site.products_and_docs.PD_DiscoveryAPIv1Definition.checkGeneralPageElements(PD_DiscoveryAPIv1Definition.java:46)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "fExpected": "Not Found",
                      "fActual": "DISCOVERY API"
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "c67d149e-ee66-45b6-aec4-efa4f811e1b5"
                  },
                  "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 407
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 11
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v1 page",
                "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 1991
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PartnerAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partner API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PartnerAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partner API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partner API page",
              "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partner API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partner API page",
                  "durationInMillis": 3116
                },
                {
                  "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1031
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 55
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partner API page",
                "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4205
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Search.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Search Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Search.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Search Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Search.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "searchRequest",
                  "test"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2675
                  },
                  {
                    "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                    "durationInMillis": 404
                  },
                  {
                    "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                    "durationInMillis": 21441
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/search/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "| searchRequest |\n|      test     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "searchRequest"
                  ],
                  "data": [
                    [
                      [
                        "searchRequest",
                        "test"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "And insert Search Parameter <searchRequest> and navigate to Search page",
                  "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24524
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 2318
                },
                {
                  "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10279
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click DirectPaymentButton element of Widgets page",
              "Then check that new page opened from Direct Payment Button has has appropriate url"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Widgets page",
                  "durationInMillis": 1228
                },
                {
                  "step": "When check visibility and click DirectPaymentButton element of Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
                  "durationInMillis": 724
                },
                {
                  "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
                  "durationInMillis": 1300
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Widgets page",
                "When check visibility and click DirectPaymentButton element of Widgets page",
                "Then check that new page opened from Direct Payment Button has has appropriate url"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Checkout Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/checkout/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 2141
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                    "durationInMillis": 2988
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                    "durationInMillis": 255
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/event-discovery/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 3129
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                    "durationInMillis": 4118
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                    "durationInMillis": 29
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Countdown Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/countdown/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 1684
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                    "durationInMillis": 2433
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                    "durationInMillis": 322
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Calendar Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/calendar/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 762
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                    "durationInMillis": 1430
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                    "durationInMillis": 49
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "WordPress Widget Learn Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/widgets/wordpress/"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Widgets page",
                    "durationInMillis": 682
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                    "durationInMillis": 3429
                  },
                  {
                    "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                    "durationInMillis": 365
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Checkout Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/checkout/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/event-discovery/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Countdown Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/countdown/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Calendar Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/calendar/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "WordPress Widget Learn Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/widgets/wordpress/"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Widgets page",
                  "When check visibility and click <elementKey> element of Widgets page",
                  "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 39740
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/OpenSource.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Open Source Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "OpenSource.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Open Source Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/OpenSource.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Open Source"
                ],
                [
                  "pageURL",
                  "http://code.ticketmaster.com/"
                ],
                [
                  "pageTitle",
                  "//h1[@id='logo']"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Home page",
                    "durationInMillis": 2538
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Home page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                    "durationInMillis": 455
                  },
                  {
                    "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                    "durationInMillis": 24
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/blogs/) Verification for general page's elements",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Open Source"
                      ],
                      [
                        "pageURL",
                        "http://code.ticketmaster.com/"
                      ],
                      [
                        "pageTitle",
                        "//h1[@id='logo']"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Home page",
                  "When check visibility and click <elementKey> element of Home page",
                  "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3021
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_OauthAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Oauth API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_OauthAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Oauth API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Oauth API page",
              "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Oauth API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Oauth API page",
                  "durationInMillis": 2402
                },
                {
                  "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 365
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Oauth API page",
                "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2792
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Event Discovery Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_EventDiscovery.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Event Discovery Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 4533
                },
                {
                  "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 524
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5091
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_CertifiedPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Certified Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_CertifiedPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Certified Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Certified Partners page",
              "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Certified Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Certified Partners page",
                  "durationInMillis": 7358
                },
                {
                  "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10314
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Certified Partners page",
                "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 17706
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Events.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Events Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Events.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Events Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/events/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Events page",
              "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/Events.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Events page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Events page",
                  "durationInMillis": 2208
                },
                {
                  "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10205
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/events/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Events page",
                "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12439
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Partners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Partners page",
              "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/partners/Partners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Partners page",
                  "durationInMillis": 5640
                },
                {
                  "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 20295
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Partners page",
                "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 25966
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch page",
                  "durationInMillis": 4302
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10261
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch page",
                "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1148
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 2269
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 64
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 818
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1550
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 258
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 663
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1475
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 51
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1372
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1584
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 401
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 596
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1547
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 307
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials EventSearch page",
                    "durationInMillis": 1042
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                    "durationInMillis": 1907
                  },
                  {
                    "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 69
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials EventSearch page",
                  "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                  "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 31743
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventWithDiscoveryAPI Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                  "durationInMillis": 4578
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 388
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 33
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
                "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5004
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Calendar.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Calendar Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Calendar.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Calendar Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4148
                },
                {
                  "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 318
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4489
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_DistributionPartners.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Distribution Partners Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_DistributionPartners.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Distribution Partners Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/distribution-partners/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Distribution Partners page",
              "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Distribution Partners page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Distribution Partners page",
                  "durationInMillis": 4837
                },
                {
                  "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 175
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/distribution-partners/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Distribution Partners page",
                "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 5032
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserApps.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "manage my Apps",
          "asA": "user of Ticket Master Developer portal",
          "iWantTo": "perform CRUD operations with my apps",
          "soThat": ""
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              "Given open Home page",
              "And navigate to Pantheon LogIn page from Home page",
              "And navigate to Pantheon User Account page from LogIn page"
            ]
          },
          "after": [
            {
              "steps": []
            }
          ]
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps/add) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When navigate to Pantheon Add New App page from User Account page",
              "Then check general page elements for Pantheon Add New App page"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app positive",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given And navigate to myApps page",
              "And open Edit App Page for the first application",
              "When change all possible fields on Edit App Page",
              "And apply changes on Edit App Page",
              "And open Edit App Page for the first application",
              "Then all changes have been applied on Edit App Page"
            ]
          },
          {
            "title": "(Pantheon|Edit App) Edit app with empty required fields negative",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|appFormField|\n|App Name     |\n|Redirect URI |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "appFormField"
              ],
              "data": [
                [
                  [
                    "appFormField",
                    "App Name"
                  ]
                ],
                [
                  [
                    "appFormField",
                    "Redirect URI"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to myApps page",
              "And open Edit App Page for the first application",
              "When clear field <appFormField> on Edit App Page",
              "And apply changes on Edit App Page",
              "Then the form-error is appear on field <appFormField>"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App positive [Add New App - App Name field with value]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "When complete form with valid values on Add New App Page",
              "And submit form on Add New App Page",
              "Then the \"App Created!\" message is displayed",
              "And the New App is appear in the list of apps"
            ]
          },
          {
            "title": "(Pantheon|Add new App) Add new App negative [Add New App - The required field is empty]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|requiredField|\n|App Name     |\n|Redirect URI |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "requiredField"
              ],
              "data": [
                [
                  [
                    "requiredField",
                    "App Name"
                  ]
                ],
                [
                  [
                    "requiredField",
                    "Redirect URI"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given navigate to Pantheon Add New App page from User Account page",
              "And make <requiredField> field empty",
              "When submit form on Add New App Page",
              "Then the form-error is appear on field <requiredField>"
            ]
          },
          {
            "title": "(Pantheon|Delete App) Delete App positive",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "When delete predefined app",
              "Then the \"App Deleted!\" message is displayed",
              "And the predefined app is removed from the list of app"
            ]
          }
        ],
        "name": "UserApps.story"
      },
      "localizedNarrative": "In order to manage my Apps\nAs a user of Ticket Master Developer portal\nI want to perform CRUD operations with my apps",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_Countdown.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Countdown Widget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_Countdown.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Countdown Widget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3078
                },
                {
                  "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 281
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 40
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3403
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_TopPicksAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Top Picks API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_TopPicksAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Top Picks API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Top Picks API page",
              "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Top Picks API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Top Picks API page",
                  "durationInMillis": 2814
                },
                {
                  "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 368
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Top Picks API page",
                "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3206
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/Blogs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Blogs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "Blogs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Blogs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Blogs page",
              "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/Blogs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Blogs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Blogs page",
                  "durationInMillis": 2246
                },
                {
                  "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 30523
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/blogs/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Blogs page",
                "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 32796
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CalendarWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Calendar Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,zipCode,radius",
              "And store values of: apiKey,keyword,zipCode,radius",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button",
              "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CalendarWidget.story"
      },
      "localizedNarrative": "In order to setup Calendar Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "Then the required fields are not empty on the Calendar Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 4227
                },
                {
                  "step": "Then the required fields are not empty on the Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
                  "durationInMillis": 139
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "Then the required fields are not empty on the Calendar Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And change values for: apiKey,keyword,zipCode,radius",
              "And store values of: apiKey,keyword,zipCode,radius",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2225
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 3796
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 335
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 919
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2479
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 252
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And change values for: apiKey,keyword,zipCode,radius",
                "And store values of: apiKey,keyword,zipCode,radius",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "zipCode",
                  "01000"
                ],
                [
                  "countryName",
                  "France"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Calendar Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Calendar Widget page",
                    "durationInMillis": 2030
                  },
                  {
                    "step": "When change value of Zip Code <zipCode>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of Zip Code ｟01000｠",
                    "durationInMillis": 2126
                  },
                  {
                    "step": "Then the Country field contains appropriate value <countryName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country field contains appropriate value ｟France｠",
                    "durationInMillis": 53
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "01000"
                      ],
                      [
                        "countryName",
                        "France"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "K1P 1J1"
                      ],
                      [
                        "countryName",
                        "Canada"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Calendar Widget page",
                  "When change value of Zip Code <zipCode>",
                  "Then the Country field contains appropriate value <countryName>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "zipCode",
                  "K1P 1J1"
                ],
                [
                  "countryName",
                  "Canada"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Calendar Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Calendar Widget page",
                    "durationInMillis": 3344
                  },
                  {
                    "step": "When change value of Zip Code <zipCode>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of Zip Code ｟K1P 1J1｠",
                    "durationInMillis": 1764
                  },
                  {
                    "step": "Then the Country field contains appropriate value <countryName>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country field contains appropriate value ｟Canada｠",
                    "durationInMillis": 77
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "01000"
                      ],
                      [
                        "countryName",
                        "France"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "K1P 1J1"
                      ],
                      [
                        "countryName",
                        "Canada"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Calendar Widget page",
                  "When change value of Zip Code <zipCode>",
                  "Then the Country field contains appropriate value <countryName>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button",
              "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 2197
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 488
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 3193
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1882
                },
                {
                  "step": "Then values of fields: apiKey,keyword,zipCode,radius equals stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then values of fields: ｟apiKey,keyword,zipCode,radius｠ equals stored values",
                  "durationInMillis": 236
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,zipCode,radius",
                "And change values for: apiKey,keyword,zipCode,radius",
                "When click reset button",
                "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And store values of: apiKey,keyword,zipCode,radius",
              "And change values for: apiKey,keyword,zipCode,radius",
              "When click reset button on Calendar Widget Page",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 1418
                },
                {
                  "step": "And store values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 637
                },
                {
                  "step": "And change values for: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 3116
                },
                {
                  "step": "When click reset button on Calendar Widget Page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button on Calendar Widget Page",
                  "durationInMillis": 599
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 717
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2358
                },
                {
                  "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
                  "durationInMillis": 297
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And store values of: apiKey,keyword,zipCode,radius",
                "And change values for: apiKey,keyword,zipCode,radius",
                "When click reset button on Calendar Widget Page",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 727
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 1451
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 833
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "And enter custom ApiKey invalidApiKey123",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CalendarWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Calendar Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Calendar Widget page",
                  "durationInMillis": 1740
                },
                {
                  "step": "And enter custom ApiKey invalidApiKey123",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
                  "durationInMillis": 383
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 2570
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 32
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Calendar Widget page",
                "And enter custom ApiKey invalidApiKey123",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 48838
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Season Ticketing API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_SeasonTicketingAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Season Ticketing API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Season Ticketing API page",
              "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Season Ticketing API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Season Ticketing API page",
                  "durationInMillis": 2864
                },
                {
                  "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 471
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Season Ticketing API page",
                "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3365
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_ChangeLog.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test ChangeLog Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_ChangeLog.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test ChangeLog Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open ChangeLog page",
              "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open ChangeLog page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open ChangeLog page",
                  "durationInMillis": 1935
                },
                {
                  "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 986
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open ChangeLog page",
                "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2948
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_GettingStarted.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Getting Started Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_GettingStarted.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Getting Started Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "When Commerce API menu has list of methods",
              "And open Getting Started page",
              "Then all the Commerce API methods are shown on Getting Started page"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 6053
                },
                {
                  "step": "When Commerce API menu has list of methods",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When Commerce API menu has list of methods",
                  "durationInMillis": 127884
                },
                {
                  "step": "And open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And open Getting Started page",
                  "durationInMillis": 998
                },
                {
                  "step": "Then all the Commerce API methods are shown on Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
                  "durationInMillis": 43629
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 726
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "When Commerce API menu has list of methods",
                "And open Getting Started page",
                "Then all the Commerce API methods are shown on Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 1511
                },
                {
                  "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 657
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 181581
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_Nexus.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Join The Nexus Program Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_Nexus.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Join The Nexus Program Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Join The Nexus Program page",
              "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_Nexus.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Join The Nexus Program page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Join The Nexus Program page",
                  "durationInMillis": 2708
                },
                {
                  "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 279
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 45
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Join The Nexus Program page",
                "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3034
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_ContactUs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Contact Us Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_ContactUs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Contact Us Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/contact-us/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Contact Us page",
              "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_ContactUs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Contact Us page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Contact Us page",
                  "durationInMillis": 2477
                },
                {
                  "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10227
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 26
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/contact-us/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Contact Us page",
                "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 12733
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/SummaryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          }
        ],
        "name": "SummaryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Summary Widget for Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Getting Started page",
              "Then Summary widget is shown for Getting Started page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Getting Started page",
                  "durationInMillis": 5009
                },
                {
                  "step": "Then Summary widget is shown for Getting Started page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Getting Started page",
                  "durationInMillis": 139
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Getting Started page",
                "Then Summary widget is shown for Getting Started page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "Then Summary widget is shown for Home page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 1826
                },
                {
                  "step": "Then Summary widget is shown for Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for Home page",
                  "durationInMillis": 36
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 35
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "Then Summary widget is shown for Home page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then Summary widget is shown for API Explorer page"
            ]
          },
          "storyPath": "stories/site/widgets/SummaryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 2104
                },
                {
                  "step": "Then Summary widget is shown for API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Summary widget is shown for API Explorer page",
                  "durationInMillis": 39
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 29
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then Summary widget is shown for API Explorer page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 9278
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_EventSearch_SearchEventInSomeLocation.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials EventSearch SearchEventInSomeLocation Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                  "durationInMillis": 3112
                },
                {
                  "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 544
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials EventSearch SearchEventInSomeLocation page",
                "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3682
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_APIExplorer.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test API Explorer Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_APIExplorer.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test API Explorer Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/api-explorer/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open API Explorer page",
              "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open API Explorer page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open API Explorer page",
                  "durationInMillis": 3363
                },
                {
                  "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 10704
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 34
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/api-explorer/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open API Explorer page",
                "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 14103
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_CommerceAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Commerce API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_CommerceAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Commerce API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Commerce API page",
              "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Commerce API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Commerce API page",
                  "durationInMillis": 6034
                },
                {
                  "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 810
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 37
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Commerce API page",
                "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6885
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_FAQ.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test FAQ Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_FAQ.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test FAQ Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/faq/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open FAQ page",
              "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_FAQ.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open FAQ page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open FAQ page",
                  "durationInMillis": 2891
                },
                {
                  "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 561
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 66
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/faq/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open FAQ page",
                "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3522
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_SDKs.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test SDK-s Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_SDKs.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test SDK-s Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/sdks/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open SDKs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open SDKs page",
                  "durationInMillis": 2643
                },
                {
                  "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 574
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/sdks/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open SDKs page",
                "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Java Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-java"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 1554
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                    "durationInMillis": 876
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 897
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-JavaScript Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-javascript"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 1297
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                    "durationInMillis": 1146
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 808
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "SDK-Scala Image"
                ],
                [
                  "pageURL",
                  "https://github.com/ticketmaster-api/sdk-scala"
                ],
                [
                  "pageTitle",
                  "//h1[@class='public ']/strong/a"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open SDKs page",
                    "durationInMillis": 1117
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of SDKs page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                    "durationInMillis": 1447
                  },
                  {
                    "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                    "durationInMillis": 1119
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(products-and-docs/sdks/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "SDK-Java Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-java"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-JavaScript Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-javascript"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "SDK-Scala Image"
                      ],
                      [
                        "pageURL",
                        "https://github.com/ticketmaster-api/sdk-scala"
                      ],
                      [
                        "pageTitle",
                        "//h1[@class='public ']/strong/a"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open SDKs page",
                  "When check visibility and click <elementKey> element of SDKs page",
                  "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13565
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/partners/Partners_StartupsDevelopers.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Startups and Developers Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Partners_StartupsDevelopers.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Startups and Developers Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/partners/startups-and-developers/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Startups and Developers page",
              "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Startups and Developers page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Startups and Developers page",
                  "durationInMillis": 3283
                },
                {
                  "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 1000
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/partners/startups-and-developers/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Startups and Developers page",
                "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4304
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 3005
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10257
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 24
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 1316
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                    "durationInMillis": 1813
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 36
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 590
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 1010
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 192
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials Widgets page",
                    "durationInMillis": 551
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                    "durationInMillis": 701
                  },
                  {
                    "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 552
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials Widgets page",
                  "When check visibility and click <elementKey> element of Tutorials Widgets page",
                  "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 20066
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_PublishAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Publish API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_PublishAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Publish API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Publish API page",
              "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Publish API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Publish API page",
                  "durationInMillis": 3849
                },
                {
                  "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 269
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 138
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Publish API page",
                "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4259
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Support Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Support Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Support page",
              "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Support page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Support page",
                  "durationInMillis": 2457
                },
                {
                  "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 304
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 30
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Support page",
                "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2794
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/FeedbackWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "send feedback",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the feedback widget\nand have ability to send feedback form to support",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          }
        ],
        "name": "FeedbackWidget.story"
      },
      "localizedNarrative": "In order to send feedback\nAs a user of Ticketmaster Developer Portal\nI want to use the feedback widget\nand have ability to send feedback form to support",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(feedback widget) Check that Feedback widget Elements are shown",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And Feedback widget is not shown",
              "When click Feedback button of Tutorials Widgets page",
              "Then Feedback widget elements are shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 2080
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And Feedback widget is not shown",
                  "durationInMillis": 563
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 83
                },
                {
                  "step": "Then Feedback widget elements are shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then Feedback widget elements are shown",
                  "durationInMillis": 1041
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Check that Feedback widget Elements are shown",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And Feedback widget is not shown",
                "When click Feedback button of Tutorials Widgets page",
                "Then Feedback widget elements are shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget Close button",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When click Feedback button of Tutorials Widgets page",
              "Then click close button of Feedback widget",
              "And Feedback widget is not shown"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1679
                },
                {
                  "step": "When click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 88
                },
                {
                  "step": "Then click close button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then click close button of Feedback widget",
                  "durationInMillis": 451
                },
                {
                  "step": "And Feedback widget is not shown",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And Feedback widget is not shown",
                  "durationInMillis": 517
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget Close button",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "When click Feedback button of Tutorials Widgets page",
                "Then click close button of Feedback widget",
                "And Feedback widget is not shown"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for NAME field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Name are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 1672
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 85
                },
                {
                  "step": "When all fields except Name are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Name are populated",
                  "durationInMillis": 719
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click send button of Feedback widget",
                  "durationInMillis": 98
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then error notification is shown for Feedback widget",
                  "durationInMillis": 28
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for NAME field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Name are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(feedback widget) Feedback widget error notifications for Email field",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "And click Feedback button of Tutorials Widgets page",
              "When all fields except Email are populated",
              "And click send button of Feedback widget",
              "Then error notification is shown for Feedback widget"
            ]
          },
          "storyPath": "stories/site/widgets/FeedbackWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets page",
                  "durationInMillis": 3042
                },
                {
                  "step": "And click Feedback button of Tutorials Widgets page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
                  "durationInMillis": 91
                },
                {
                  "step": "When all fields except Email are populated",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When all fields except Email are populated",
                  "durationInMillis": 886
                },
                {
                  "step": "And click send button of Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click send button of Feedback widget",
                  "durationInMillis": 94
                },
                {
                  "step": "Then error notification is shown for Feedback widget",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then error notification is shown for Feedback widget",
                  "durationInMillis": 29
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 16
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(feedback widget) Feedback widget error notifications for Email field",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets page",
                "And click Feedback button of Tutorials Widgets page",
                "When all fields except Email are populated",
                "And click send button of Feedback widget",
                "Then error notification is shown for Feedback widget"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 13358
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        ],
        "name": "PD_Tutorials.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials page",
                  "durationInMillis": 2777
                },
                {
                  "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 10265
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 28
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials page",
                "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 373
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                    "durationInMillis": 1710
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 239
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 777
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 1760
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 45
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Adding Event Discovery Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 846
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 3829
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                    "durationInMillis": 67
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2029
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                    "durationInMillis": 4103
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 37
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 2644
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 3249
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 46
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Locate Event On Map Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 1324
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 2325
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                    "durationInMillis": 99
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Button"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 610
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                    "durationInMillis": 2106
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 430
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Header Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 586
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                    "durationInMillis": 3230
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 327
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "elementKey",
                  "Get Started WIth Discovery API Widget Image Link"
                ],
                [
                  "pageURL",
                  "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                ],
                [
                  "pageTitle",
                  "//h1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Tutorials page",
                    "durationInMillis": 512
                  },
                  {
                    "step": "When check visibility and click <elementKey> element of Tutorials page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                    "durationInMillis": 1289
                  },
                  {
                    "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                    "durationInMillis": 121
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "elementKey",
                    "pageURL",
                    "pageTitle"
                  ],
                  "data": [
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Adding Event Discovery Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Locate Event On Map Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Button"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Header Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ],
                    [
                      [
                        "elementKey",
                        "Get Started WIth Discovery API Widget Image Link"
                      ],
                      [
                        "pageURL",
                        "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                      ],
                      [
                        "pageTitle",
                        "//h1"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Tutorials page",
                  "When check visibility and click <elementKey> element of Tutorials page",
                  "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 47821
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/CountdownWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Countdown Widget",
          "asA": "developer",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "And get eventId by keyword ADELE",
              "And set first eventId from list",
              "Then the event poster contains ADELE"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          }
        ],
        "name": "CountdownWidget.story"
      },
      "localizedNarrative": "In order to setup Countdown Widget\nAs a developer\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "Then the required fields are not empty on the Countdown Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2900
                },
                {
                  "step": "Then the required fields are not empty on the Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
                  "durationInMillis": 198
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 114
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "Then the required fields are not empty on the Countdown Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1304
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 129
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 871
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2394
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 132
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2191
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 604
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 93
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 707
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2713
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 105
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 18
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "Then the ApiKey and EventId fields have stored values"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3263
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 103
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 404
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 62
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 1737
                },
                {
                  "step": "Then the ApiKey and EventId fields have stored values",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
                  "durationInMillis": 61
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 20
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "Then the ApiKey and EventId fields have stored values"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And store ApiKey and EventId on Countdown Widget page",
              "And change value for ApiKey and EventId on Countdown Widget page",
              "When submit form",
              "And click reset button",
              "And click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored ApiKey and EventId"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 2714
                },
                {
                  "step": "And store ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 379
                },
                {
                  "step": "And change value for ApiKey and EventId on Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
                  "durationInMillis": 477
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 114
                },
                {
                  "step": "And click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click reset button",
                  "durationInMillis": 1717
                },
                {
                  "step": "And click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And click on \"Get code\" button",
                  "durationInMillis": 683
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2387
                },
                {
                  "step": "And embedded html code contains stored ApiKey and EventId",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
                  "durationInMillis": 124
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 17
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And store ApiKey and EventId on Countdown Widget page",
                "And change value for ApiKey and EventId on Countdown Widget page",
                "When submit form",
                "And click reset button",
                "And click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored ApiKey and EventId"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When User is logged to site (Countdown Widget)",
              "And get eventId by keyword ADELE",
              "And set first eventId from list",
              "Then the event poster contains ADELE"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3229
                },
                {
                  "step": "When User is logged to site (Countdown Widget)",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "When User is logged to site (Countdown Widget)",
                    "cause": {
                      "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                      "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-fa3eccb0-e91e-4528-ae8f-78df9e34e364', ip: '172.17.0.8', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                      "cause": {
                        "@class": "org.openqa.selenium.NoSuchElementException",
                        "@defined-in": "java.lang.Throwable",
                        "detailMessage": "Timed out after 5 seconds. Element not found",
                        "stackTrace": [
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                          "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                          "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:177)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:313)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:687)",
                          "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:999)",
                          "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                          "com.sun.proxy.$Proxy22.click(Unknown Source)",
                          "bla.tm.steps.pantheon.UserAccountSteps.getAPIKeyOfUser(UserAccountSteps.java:14)",
                          "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.CGLIB$getAPIKeyOfUser$2(<generated>)",
                          "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7$$FastClassByCGLIB$$4ade5d30.invoke(<generated>)",
                          "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                          "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                          "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                          "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                          "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                          "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                          "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.getAPIKeyOfUser(<generated>)",
                          "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.openLogInPageAndLogIn(CountdownWidgetDefinition.java:92)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                          "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                          "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                          "java.lang.reflect.Method.invoke(Method.java:483)",
                          "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                          "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                          "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                          "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                          "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                          "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                          "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                          "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                          "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                          "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                          "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                          "java.lang.Thread.run(Thread.java:745)"
                        ],
                        "suppressedExceptions": [
                          [],
                          []
                        ],
                        "extraInfo": [
                          [
                            "Driver info",
                            "driver.version: unknown"
                          ]
                        ]
                      },
                      "stackTrace": [
                        "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.getAPIKeyOfUser(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.openLogInPageAndLogIn(CountdownWidgetDefinition.java:92)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-fa3eccb0-e91e-4528-ae8f-78df9e34e364', ip: '172.17.0.8', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                      "stackTrace": [
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                        "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                        "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:177)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:313)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:687)",
                        "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:999)",
                        "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                        "com.sun.proxy.$Proxy22.click(Unknown Source)",
                        "bla.tm.steps.pantheon.UserAccountSteps.getAPIKeyOfUser(UserAccountSteps.java:14)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.CGLIB$getAPIKeyOfUser$2(<generated>)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7$$FastClassByCGLIB$$4ade5d30.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.getAPIKeyOfUser(<generated>)",
                        "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.openLogInPageAndLogIn(CountdownWidgetDefinition.java:92)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "96903a90-07f5-499e-9d5e-e8f3da3f1050"
                  },
                  "parametrisedStep": "When User is logged to site (Countdown Widget)",
                  "durationInMillis": 13551
                },
                {
                  "step": "And get eventId by keyword ADELE",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "And get eventId by keyword ｟ADELE｠",
                  "durationInMillis": 0
                },
                {
                  "step": "And set first eventId from list",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "And set first eventId from list",
                  "durationInMillis": 0
                },
                {
                  "step": "Then the event poster contains ADELE",
                  "type": "NOT_PERFORMED",
                  "parametrisedStep": "Then the event poster contains ｟ADELE｠",
                  "durationInMillis": 0
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 3
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When User is logged to site (Countdown Widget)",
                "And get eventId by keyword ADELE",
                "And set first eventId from list",
                "Then the event poster contains ADELE"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 3845
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 128
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 1815
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 124
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "NOT_PERFORMED"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to full-width",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored theme"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1927
                },
                {
                  "step": "And switch to VISUAL Tab",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And switch to VISUAL Tab",
                  "durationInMillis": 991
                },
                {
                  "step": "And set theme to full-width",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And set theme to full-width",
                  "durationInMillis": 499
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 1464
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2196
                },
                {
                  "step": "And embedded html code contains stored theme",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored theme",
                  "durationInMillis": 108
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 21
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And switch to VISUAL Tab",
                "And set theme to full-width",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored theme"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1264
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 959
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 391
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 773
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 783
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2328
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 208
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1655
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 854
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 477
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 742
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 935
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2574
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 180
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2203
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 839
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 396
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 718
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 742
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2760
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 70
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 2572
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 695
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 473
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 767
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 897
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2508
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 68
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Countdown Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Countdown Widget page",
                    "durationInMillis": 1646
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 739
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 411
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 796
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 849
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2420
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 66
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Countdown Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom ApiKey {InvalidApiKey123}",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1364
                },
                {
                  "step": "And enter custom ApiKey {InvalidApiKey123}",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
                  "durationInMillis": 477
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 80
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 517
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 36
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom ApiKey {InvalidApiKey123}",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And enter custom EventId \"invalidEventId123\"",
              "When submit form",
              "Then the event message is shown \"No results were found\""
            ]
          },
          "storyPath": "stories/site/widgets/CountdownWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Countdown Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Countdown Widget page",
                  "durationInMillis": 1268
                },
                {
                  "step": "And enter custom EventId \"invalidEventId123\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
                  "durationInMillis": 436
                },
                {
                  "step": "When submit form",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When submit form",
                  "durationInMillis": 106
                },
                {
                  "step": "Then the event message is shown \"No results were found\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"No results were found\"",
                  "durationInMillis": 675
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 31
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Countdown Widget page",
                "And enter custom EventId \"invalidEventId123\"",
                "When submit form",
                "Then the event message is shown \"No results were found\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 100585
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Tutorials_Widgets_EventDiscoveryWidget.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Tutorials Widgets EventDiscoveryWidget Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets EventDiscoveryWidget page",
              "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
                  "durationInMillis": 2941
                },
                {
                  "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 478
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 68
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Tutorials Widgets EventDiscoveryWidget page",
                "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3490
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Universal Checkout Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_Widget_UniversalCheckout.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Universal Checkout Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Universal Checkout page",
              "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Universal Checkout page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Universal Checkout page",
                  "durationInMillis": 3579
                },
                {
                  "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 651
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Universal Checkout page",
                "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 4276
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test International Discovery API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InternationalDiscoveryAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test International Discovery API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open International Discovery API page",
              "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open International Discovery API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open International Discovery API page",
                  "durationInMillis": 4795
                },
                {
                  "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 2153
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 39
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open International Discovery API page",
                "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6991
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/widgets/EventDiscoveryWidget.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "setup Event Discovery Widget",
          "asA": "user of Ticketmaster Developer Portal",
          "iWantTo": "use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          }
        ],
        "name": "EventDiscoveryWidget.story"
      },
      "localizedNarrative": "In order to setup Event Discovery Widget\nAs a user of Ticketmaster Developer Portal\nI want to use the widget configurator to customize the layout of the widget,\nand have ability to grab a small code snippet to insert into 3-rd party websites",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "Then the required fields are not empty and have default values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 5636
                },
                {
                  "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
                  "durationInMillis": 157
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 22
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "Then the required fields are not empty and have default values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored values on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 3453
                },
                {
                  "step": "And change values for all possible fields on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
                  "durationInMillis": 8026
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 700
                },
                {
                  "step": "When click on \"Get code\" button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click on \"Get code\" button",
                  "durationInMillis": 909
                },
                {
                  "step": "Then the pop-up Embedded Code is opened",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the pop-up Embedded Code is opened",
                  "durationInMillis": 2687
                },
                {
                  "step": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
                  "durationInMillis": 1030
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 43
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And change values for all possible fields on the Event Discovery Widget page",
                "And store all fields values on the Event Discovery Widget page",
                "When click on \"Get code\" button",
                "Then the pop-up Embedded Code is opened",
                "And embedded html code contains stored values on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "zipCode",
                  "NW1"
                ],
                [
                  "countryName",
                  "United Kingdom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2709
                  },
                  {
                    "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟NW1｠ on Event Discovery Widget Page",
                    "durationInMillis": 1079
                  },
                  {
                    "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country Field contains appropriate value ｟United Kingdom｠ on Event Discovery Widget Page",
                    "durationInMillis": 2768
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "NW1"
                      ],
                      [
                        "countryName",
                        "United Kingdom"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "40104"
                      ],
                      [
                        "countryName",
                        "United States"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                  "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "zipCode",
                  "40104"
                ],
                [
                  "countryName",
                  "United States"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3675
                  },
                  {
                    "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When change value of ZipCode ｟40104｠ on Event Discovery Widget Page",
                    "durationInMillis": 929
                  },
                  {
                    "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the Country Field contains appropriate value ｟United States｠ on Event Discovery Widget Page",
                    "durationInMillis": 1553
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "zipCode",
                    "countryName"
                  ],
                  "data": [
                    [
                      [
                        "zipCode",
                        "NW1"
                      ],
                      [
                        "countryName",
                        "United Kingdom"
                      ]
                    ],
                    [
                      [
                        "zipCode",
                        "40104"
                      ],
                      [
                        "countryName",
                        "United States"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                  "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "keyword",
                  "ADELE"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3736
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 319
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                    "durationInMillis": 2765
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "keyword",
                  "STING"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2541
                  },
                  {
                    "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 390
                  },
                  {
                    "step": "Then found events contains <keyword> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                    "durationInMillis": 2285
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "keyword"
                  ],
                  "data": [
                    [
                      [
                        "keyword",
                        "ADELE"
                      ]
                    ],
                    [
                      [
                        "keyword",
                        "STING"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When search events by keyword <keyword> on Event Discovery Widget page",
                  "Then found events contains <keyword> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 1796
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 2598
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                    "durationInMillis": 51
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 3969
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2345
                  },
                  {
                    "step": "Then the number of events equals or less than Event Count <value>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                    "durationInMillis": 1885
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|\n| 1   |\n| 100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals or less than Event Count <value>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "value",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 881
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 3495
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 122
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 1189
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 3922
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                    "durationInMillis": 91
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "100"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2223
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                    "durationInMillis": 2768
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 83
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            },
            {
              "parameters": [
                [
                  "value",
                  "101"
                ],
                [
                  "actualValue",
                  "100"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 794
                  },
                  {
                    "step": "When set Event Count <value> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                    "durationInMillis": 3534
                  },
                  {
                    "step": "Then the number of events equals Event Count <actualValue>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                    "durationInMillis": 118
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "value",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "value",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "value",
                        "100"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ],
                    [
                      [
                        "value",
                        "101"
                      ],
                      [
                        "actualValue",
                        "100"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "When set Event Count <value> on Event Discovery Widget page",
                  "Then the number of events equals Event Count <actualValue>"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "setValue",
                  "0"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 777
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 2214
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟0｠ on Event Discovery Widget page",
                    "durationInMillis": 954
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 83
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "1"
                ],
                [
                  "actualValue",
                  "1"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 901
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 2474
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 324
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                    "durationInMillis": 83
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "19999"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 885
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 2289
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 400
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 121
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            },
            {
              "parameters": [
                [
                  "setValue",
                  "20000"
                ],
                [
                  "actualValue",
                  "19999"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 950
                  },
                  {
                    "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                    "durationInMillis": 2299
                  },
                  {
                    "step": "When set Radius <setValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When set Radius ｟20000｠ on Event Discovery Widget page",
                    "durationInMillis": 631
                  },
                  {
                    "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                    "durationInMillis": 107
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "setValue",
                    "actualValue"
                  ],
                  "data": [
                    [
                      [
                        "setValue",
                        "0"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "1"
                      ],
                      [
                        "actualValue",
                        "1"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "19999"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ],
                    [
                      [
                        "setValue",
                        "20000"
                      ],
                      [
                        "actualValue",
                        "19999"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And change value of ZipCode 90015 on Event Discovery Widget Page",
                  "When set Radius <setValue> on Event Discovery Widget page",
                  "Then Radius value is <actualValue> on Event Discovery Widget page"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And store all fields values on the Event Discovery Widget page",
              "And change values for all possible fields on the Event Discovery Widget page",
              "When click reset button",
              "Then all fields have been reseted to defaults on the Event Discovery Widget page"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 865
                },
                {
                  "step": "And store all fields values on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
                  "durationInMillis": 2541
                },
                {
                  "step": "And change values for all possible fields on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
                  "durationInMillis": 7902
                },
                {
                  "step": "When click reset button",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When click reset button",
                  "durationInMillis": 1741
                },
                {
                  "step": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
                  "durationInMillis": 656
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 41
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "And store all fields values on the Event Discovery Widget page",
                "And change values for all possible fields on the Event Discovery Widget page",
                "When click reset button",
                "Then all fields have been reseted to defaults on the Event Discovery Widget page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When I click on the 'Get your own' link to get api key",
              "Then The page is opened with url https://developer-acct.ticketmaster.com"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 2943
                },
                {
                  "step": "When I click on the 'Get your own' link to get api key",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When I click on the 'Get your own' link to get api key",
                  "durationInMillis": 248
                },
                {
                  "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
                  "durationInMillis": 870
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 27
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When I click on the 'Get your own' link to get api key",
                "Then The page is opened with url https://developer-acct.ticketmaster.com"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x600"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 877
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 2482
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 441
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x600｠",
                    "durationInMillis": 1189
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 932
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2329
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 235
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "300x250"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2501
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 984
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 383
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟300x250｠",
                    "durationInMillis": 718
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1303
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2390
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 181
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            },
            {
              "parameters": [
                [
                  "layoutResolution",
                  "custom"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 2182
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 910
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 401
                  },
                  {
                    "step": "And set layout resolution to <layoutResolution>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout resolution to ｟custom｠",
                    "durationInMillis": 695
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 866
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2311
                  },
                  {
                    "step": "And embedded html code contains stored layout resolution",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout resolution",
                    "durationInMillis": 79
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "layoutResolution"
                  ],
                  "data": [
                    [
                      [
                        "layoutResolution",
                        "300x600"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "300x250"
                      ]
                    ],
                    [
                      [
                        "layoutResolution",
                        "custom"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout resolution to <layoutResolution>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout resolution"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "orientation",
                  "horizontal"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 766
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1816
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 382
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                    "durationInMillis": 738
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 862
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2275
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 81
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            },
            {
              "parameters": [
                [
                  "orientation",
                  "vertical"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given open Event Discovery Widget page",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Given open Event Discovery Widget page",
                    "durationInMillis": 812
                  },
                  {
                    "step": "And switch to VISUAL Tab",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And switch to VISUAL Tab",
                    "durationInMillis": 1964
                  },
                  {
                    "step": "And set theme to poster",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set theme to poster",
                    "durationInMillis": 394
                  },
                  {
                    "step": "And set layout orientation to <orientation>",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And set layout orientation to ｟vertical｠",
                    "durationInMillis": 725
                  },
                  {
                    "step": "When click on \"Get code\" button",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "When click on \"Get code\" button",
                    "durationInMillis": 1007
                  },
                  {
                    "step": "Then the pop-up Embedded Code is opened",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "Then the pop-up Embedded Code is opened",
                    "durationInMillis": 2309
                  },
                  {
                    "step": "And embedded html code contains stored layout orientation",
                    "type": "SUCCESSFUL",
                    "parametrisedStep": "And embedded html code contains stored layout orientation",
                    "durationInMillis": 236
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": []
              },
              "scenario": {
                "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
                "meta": {
                  "properties": []
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "orientation"
                  ],
                  "data": [
                    [
                      [
                        "orientation",
                        "horizontal"
                      ]
                    ],
                    [
                      [
                        "orientation",
                        "vertical"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given open Event Discovery Widget page",
                  "And switch to VISUAL Tab",
                  "And set theme to poster",
                  "And set layout orientation to <orientation>",
                  "When click on \"Get code\" button",
                  "Then the pop-up Embedded Code is opened",
                  "And embedded html code contains stored layout orientation"
                ]
              }
            }
          ],
          "status": "SUCCESSFUL"
        },
        {
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "Then the event message is shown \"Here other options for you.\""
            ]
          },
          "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Event Discovery Widget page",
                  "durationInMillis": 2311
                },
                {
                  "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
                  "durationInMillis": 385
                },
                {
                  "step": "Then the event message is shown \"Here other options for you.\"",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
                  "durationInMillis": 661
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 38
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 1
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Event Discovery Widget page",
                "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
                "Then the event message is shown \"Here other options for you.\""
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 154962
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/RequestNewPassword.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon Request New Password Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          }
        ],
        "name": "RequestNewPassword.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon Request New Password Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon Request New Password page from LogIn page",
              "Then check general page elements for Pantheon Request New Password page"
            ]
          },
          "storyPath": "stories/site/pantheon/RequestNewPassword.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2596
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1002
                },
                {
                  "step": "When navigate to Pantheon Request New Password page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
                  "durationInMillis": 460
                },
                {
                  "step": "Then check general page elements for Pantheon Request New Password page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
                  "durationInMillis": 20351
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 19
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon Request New Password page from LogIn page",
                "Then check general page elements for Pantheon Request New Password page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 24431
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/UserAccount.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Pantheon User Account Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "debug",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          }
        ],
        "name": "UserAccount.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Pantheon User Account Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "FAILED",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When navigate to Pantheon LogIn page from Home page",
              "When navigate to Pantheon User Account page from LogIn page",
              "Then check general page elements for Pantheon User Account page"
            ]
          },
          "storyPath": "stories/site/pantheon/UserAccount.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Home page",
                  "durationInMillis": 2448
                },
                {
                  "step": "When navigate to Pantheon LogIn page from Home page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
                  "durationInMillis": 1036
                },
                {
                  "step": "When navigate to Pantheon User Account page from LogIn page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
                  "durationInMillis": 2212
                },
                {
                  "step": "Then check general page elements for Pantheon User Account page",
                  "type": "FAILED",
                  "throwable": {
                    "detailMessage": "Then check general page elements for Pantheon User Account page",
                    "cause": {
                      "@class": "org.junit.ComparisonFailure",
                      "detailMessage": "",
                      "stackTrace": [
                        "org.junit.Assert.assertEquals(Assert.java:115)",
                        "org.junit.Assert.assertEquals(Assert.java:144)",
                        "bla.tm.steps.pantheon.UserAccountSteps.checkIfTitleIsCorrect(UserAccountSteps.java:25)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.CGLIB$checkIfTitleIsCorrect$0(<generated>)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7$$FastClassByCGLIB$$4ade5d30.invoke(<generated>)",
                        "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                        "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                        "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                        "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                        "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                        "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                        "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.checkIfTitleIsCorrect(<generated>)",
                        "bla.tm.definitions.site.pantheon.UserAccountDefinition.checkGeneralPageElements(UserAccountDefinition.java:27)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                        "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                        "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                        "java.lang.reflect.Method.invoke(Method.java:483)",
                        "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                        "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                        "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                        "java.lang.Thread.run(Thread.java:745)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "fExpected": "THESE ARE YOUR APPS!\nEXPLORE THEM!",
                      "fActual": "There are no applications here.\nCreate something!"
                    },
                    "stackTrace": [
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "uuid": "31fdd8ce-2a74-4a6f-8e13-2bf1d1057b26"
                  },
                  "parametrisedStep": "Then check general page elements for Pantheon User Account page",
                  "durationInMillis": 491
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 3
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": [
                {
                  "@name": "debug",
                  "@value": ""
                }
              ]
            },
            "scenario": {
              "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Home page",
                "When navigate to Pantheon LogIn page from Home page",
                "When navigate to Pantheon User Account page from LogIn page",
                "Then check general page elements for Pantheon User Account page"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "FAILED"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6197
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InteractiveAPIConsole.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Interactive API Console Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/interactive-console/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Interactive API Console page",
              "Then check general page elements for Interactive API Console Page, where DISQUS = true and LeftMenu = false"
            ]
          }
        ],
        "name": "PD_InteractiveAPIConsole.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Interactive API Console Page of Ticket Master Developer's site",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Discovery API v2 Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_DiscoveryAPIV2.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Discovery API v2 Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Discovery API v2 page",
              "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Discovery API v2 page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Discovery API v2 page",
                  "durationInMillis": 4814
                },
                {
                  "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 2022
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 40
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Discovery API v2 page",
                "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 6879
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/pantheon/AffiliateID.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "user",
          "iWantTo": "perform an action",
          "soThat": "I can achieve a business goal"
        },
        "meta": {
          "properties": [
            {
              "@name": "NotImplemented",
              "@value": ""
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "scenario description",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a system state",
              "When I do something",
              "Then system is in a different state"
            ]
          }
        ],
        "name": "AffiliateID.story"
      },
      "localizedNarrative": "As a user\nI want to perform an action\nSo that I can achieve a business goal",
      "allowed": false,
      "givenStories": [],
      "scenarios": [],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 0
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Products and Docs Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        ],
        "name": "PD.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Products and Docs Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Products and Docs page",
              "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Products and Docs page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Products and Docs page",
                  "durationInMillis": 3915
                },
                {
                  "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                  "durationInMillis": 40298
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 25
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Products and Docs page",
                "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 44242
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Inventory Status API Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "PD_InventoryStatusAPI.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Inventory Status API Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Inventory Status API page",
              "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Inventory Status API page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Inventory Status API page",
                  "durationInMillis": 3283
                },
                {
                  "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 219
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 231
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Inventory Status API page",
                "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 3738
      },
      "givenStory": false
    },
    {
      "story": {
        "path": "stories/site/support/Support_BrandingGuide.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "test engineer",
          "iWantTo": "test Ticket Master Developer's site",
          "soThat": "I test Branding Guide Page of Ticket Master Developer's site"
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          }
        ],
        "name": "Support_BrandingGuide.story"
      },
      "localizedNarrative": "As a test engineer\nI want to test Ticket Master Developer's site\nSo that I test Branding Guide Page of Ticket Master Developer's site",
      "allowed": true,
      "status": "SUCCESSFUL",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "(/support/branding-guide/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Branding Guide page",
              "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
            ]
          },
          "storyPath": "stories/site/support/Support_BrandingGuide.story",
          "allowed": true,
          "normalPerformableScenario": {
            "parameters": [],
            "givenStories": [],
            "beforeSteps": {
              "matches": []
            },
            "steps": {
              "matches": [],
              "results": [
                {
                  "step": "Given open Branding Guide page",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Given open Branding Guide page",
                  "durationInMillis": 2398
                },
                {
                  "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
                  "type": "SUCCESSFUL",
                  "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
                  "durationInMillis": 354
                }
              ]
            },
            "afterSteps": {
              "matches": [],
              "results": [
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 23
                },
                {
                  "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
                  "type": "SUCCESSFUL",
                  "durationInMillis": 0
                },
                {
                  "step": "",
                  "type": "SKIPPED",
                  "durationInMillis": 0
                }
              ]
            },
            "storyAndScenarioMeta": {
              "properties": []
            },
            "scenario": {
              "title": "(/support/branding-guide/) Verification for general page's elements",
              "meta": {
                "properties": []
              },
              "givenStories": {
                "givenStories": [],
                "givenStoriesAsString": "",
                "examplesTable": {
                  "tableAsString": "",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [],
                  "data": [],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                }
              },
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              },
              "steps": [
                "Given open Branding Guide page",
                "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
              ]
            }
          },
          "examplePerformableScenarios": [],
          "status": "SUCCESSFUL"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2777
      },
      "givenStory": false
    }
  ],
  "scenarios": [
    {
      "scenario": {
        "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Deals API page",
          "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DealsAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Deals API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Deals API page",
              "durationInMillis": 3821
            },
            {
              "step": "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Deals API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 795
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 88
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/deals-api/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Deals API page",
            "Then check general page elements for Deals API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open General Terms Of Use page",
          "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_GeneralTermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open General Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open General Terms Of Use page",
              "durationInMillis": 4764
            },
            {
              "step": "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for General Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 254
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open General Terms Of Use page",
            "Then check general page elements for General Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API Terms Of Use page",
          "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_PartnerAPITermsOfUse.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API Terms Of Use page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API Terms Of Use page",
              "durationInMillis": 4970
            },
            {
              "step": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 191
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 46
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/terms-of-use/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API Terms Of Use page",
            "Then check general page elements for Partner API Terms Of Use Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Create New Account page from LogIn page",
          "Then check general page elements for Pantheon Create New Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/CreateNewAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 4110
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1079
            },
            {
              "step": "When navigate to Pantheon Create New Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Create New Account page from LogIn page",
              "durationInMillis": 1071
            },
            {
              "step": "Then check general page elements for Pantheon Create New Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Create New Account page",
              "durationInMillis": 20325
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 46
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/register) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Create New Account page from LogIn page",
            "Then check general page elements for Pantheon Create New Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open WordPress Widget page",
          "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_WordPress.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open WordPress Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open WordPress Widget page",
              "durationInMillis": 4647
            },
            {
              "step": "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for WordPress Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 200
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/wordpress/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open WordPress Widget page",
            "Then check general page elements for WordPress Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for general page elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3439
            },
            {
              "step": "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Home Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20439
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for general page elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check general page elements for Home Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for twitter's list of events",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then check that Twitter's list of events is shown"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1622
            },
            {
              "step": "Then check that Twitter's list of events is shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that Twitter's list of events is shown",
              "durationInMillis": 33
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/Home Page/) Verification for twitter's list of events",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then check that Twitter's list of events is shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/Home Page/) Verification for all the page links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "elementLocation"
          ],
          "data": [
            [
              [
                "elementKey",
                "Get Your API Key"
              ],
              [
                "pageURL",
                "https://developer-acct.ticketmaster.com/user/login"
              ],
              [
                "elementLocation",
                "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
              ]
            ],
            [
              [
                "elementKey",
                "Review Documentation"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/getting-started/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Explore The API"
              ],
              [
                "pageURL",
                "{url}/api-explorer/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Android"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#android-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Backend"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#backend-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "iOS"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#iOS-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Web"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/#web-projects"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Tech blog"
              ],
              [
                "pageURL",
                "https://tech.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//h1[@class='site-title']/a"
              ]
            ],
            [
              [
                "elementKey",
                "Medium Publication"
              ],
              [
                "pageURL",
                "https://medium.com/ticketmaster-tech"
              ],
              [
                "elementLocation",
                "//h2[text()='Because Engineers are Fans Too!']"
              ]
            ],
            [
              [
                "elementKey",
                "Partner API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/partner/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Deals API"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/apis/deals-api/"
              ],
              [
                "elementLocation",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Legacy docs"
              ],
              [
                "pageURL",
                "http://apidocs.ticketmaster.com/"
              ],
              [
                "elementLocation",
                "//td[@class='WikiLogoName']/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
        ]
      },
      "storyPath": "stories/site/Home.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Get Your API Key"
            ],
            [
              "pageURL",
              "https://developer-acct.ticketmaster.com/user/login"
            ],
            [
              "elementLocation",
              "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 3371
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Your API Key｠ element of Home page",
                "durationInMillis": 930
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://developer-acct.ticketmaster.com/user/login｠ and ｟//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']｠",
                "durationInMillis": 131
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Review Documentation"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/getting-started/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2622
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Review Documentation｠ element of Home page",
                "durationInMillis": 2147
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/getting-started/｠ and ｟//h1｠",
                "durationInMillis": 121
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Explore The API"
            ],
            [
              "pageURL",
              "{url}/api-explorer/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1627
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Explore The API｠ element of Home page",
                "durationInMillis": 2351
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/api-explorer/｠ and ｟//h1｠",
                "durationInMillis": 91
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Android"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#android-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1912
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Android｠ element of Home page",
                "durationInMillis": 156
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#android-projects｠ and ｟//h1｠",
                "durationInMillis": 5409
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Backend"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#backend-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 707
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Backend｠ element of Home page",
                "durationInMillis": 335
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#backend-projects｠ and ｟//h1｠",
                "durationInMillis": 21
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "iOS"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#iOS-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 642
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟iOS｠ element of Home page",
                "durationInMillis": 225
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#iOS-projects｠ and ｟//h1｠",
                "durationInMillis": 114
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Web"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/#web-projects"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 790
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Web｠ element of Home page",
                "durationInMillis": 274
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/#web-projects｠ and ｟//h1｠",
                "durationInMillis": 27
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Tech blog"
            ],
            [
              "pageURL",
              "https://tech.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//h1[@class='site-title']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1133
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Tech blog｠ element of Home page",
                "durationInMillis": 3061
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://tech.ticketmaster.com/｠ and ｟//h1[@class='site-title']/a｠",
                "durationInMillis": 47
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Medium Publication"
            ],
            [
              "pageURL",
              "https://medium.com/ticketmaster-tech"
            ],
            [
              "elementLocation",
              "//h2[text()='Because Engineers are Fans Too!']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1005
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Medium Publication｠ element of Home page",
                "durationInMillis": 1298
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟https://medium.com/ticketmaster-tech｠ and ｟//h2[text()='Because Engineers are Fans Too!']｠",
                "durationInMillis": 34
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Partner API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/partner/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 1005
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Partner API｠ element of Home page",
                "durationInMillis": 1548
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/partner/｠ and ｟//h1｠",
                "durationInMillis": 87
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Deals API"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/apis/deals-api/"
            ],
            [
              "elementLocation",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 867
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Deals API｠ element of Home page",
                "durationInMillis": 1061
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟{url}/products-and-docs/apis/deals-api/｠ and ｟//h1｠",
                "durationInMillis": 58
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Legacy docs"
            ],
            [
              "pageURL",
              "http://apidocs.ticketmaster.com/"
            ],
            [
              "elementLocation",
              "//td[@class='WikiLogoName']/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 776
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Legacy docs｠ element of Home page",
                "durationInMillis": 1655
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <elementLocation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://apidocs.ticketmaster.com/｠ and ｟//td[@class='WikiLogoName']/a｠",
                "durationInMillis": 128
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/Home Page/) Verification for all the page links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|elementKey           |pageURL                                                 |elementLocation                                                                     |\n|Get Your API Key     |https://developer-acct.ticketmaster.com/user/login      |//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop'] |\n|Review Documentation |{url}/products-and-docs/apis/getting-started/           |//h1                                                                                |\n|Explore The API      |{url}/api-explorer/                                     |//h1                                                                                |\n|Android              |http://code.ticketmaster.com/#android-projects          |//h1                                                                                |\n|Backend              |http://code.ticketmaster.com/#backend-projects          |//h1                                                                                |\n|iOS                  |http://code.ticketmaster.com/#iOS-projects              |//h1                                                                                |\n|Web                  |http://code.ticketmaster.com/#web-projects              |//h1                                                                                |\n|Tech blog            |https://tech.ticketmaster.com/                          |//h1[@class='site-title']/a                                                         |\n|Medium Publication   |https://medium.com/ticketmaster-tech                    |//h2[text()='Because Engineers are Fans Too!']                                      |\n|Partner API          |{url}/products-and-docs/apis/partner/                   |//h1                                                                                |\n|Deals API            |{url}/products-and-docs/apis/deals-api/                 |//h1                                                                                |\n|Legacy docs          |http://apidocs.ticketmaster.com/                        |//td[@class='WikiLogoName']/a                                                       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "elementLocation"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Get Your API Key"
                  ],
                  [
                    "pageURL",
                    "https://developer-acct.ticketmaster.com/user/login"
                  ],
                  [
                    "elementLocation",
                    "//div[@class='text-wrapper col-lg-6 col-sm-12 col-xs-12']/h1[@class='only-desktop']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Review Documentation"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/getting-started/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Explore The API"
                  ],
                  [
                    "pageURL",
                    "{url}/api-explorer/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Android"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#android-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Backend"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#backend-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "iOS"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#iOS-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Web"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/#web-projects"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Tech blog"
                  ],
                  [
                    "pageURL",
                    "https://tech.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//h1[@class='site-title']/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Medium Publication"
                  ],
                  [
                    "pageURL",
                    "https://medium.com/ticketmaster-tech"
                  ],
                  [
                    "elementLocation",
                    "//h2[text()='Because Engineers are Fans Too!']"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Partner API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/partner/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Deals API"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/apis/deals-api/"
                  ],
                  [
                    "elementLocation",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Legacy docs"
                  ],
                  [
                    "pageURL",
                    "http://apidocs.ticketmaster.com/"
                  ],
                  [
                    "elementLocation",
                    "//td[@class='WikiLogoName']/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <elementLocation>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "When navigate to Pantheon Edit Profile page from User Account page",
          "Then check general page elements for Pantheon Edit Profile page"
        ]
      },
      "storyPath": "stories/site/pantheon/EditProfile.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2335
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 914
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 2237
            },
            {
              "step": "When navigate to Pantheon Edit Profile page from User Account page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Edit Profile page from User Account page",
              "durationInMillis": 1892
            },
            {
              "step": "Then check general page elements for Pantheon Edit Profile page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Edit Profile page",
              "durationInMillis": 20392
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/edit) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "When navigate to Pantheon Edit Profile page from User Account page",
            "Then check general page elements for Pantheon Edit Profile page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "Then check general page elements for Pantheon User LonIn page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserLogIn.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 3157
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 985
            },
            {
              "step": "Then check general page elements for Pantheon User LonIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon User LonIn page",
              "durationInMillis": 20230
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/login) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "Then check general page elements for Pantheon User LonIn page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v1 page",
          "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV1.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v1 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v1 page",
              "durationInMillis": 1481
            },
            {
              "step": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true",
                "cause": {
                  "@class": "org.junit.ComparisonFailure",
                  "detailMessage": "",
                  "stackTrace": [
                    "org.junit.Assert.assertEquals(Assert.java:115)",
                    "org.junit.Assert.assertEquals(Assert.java:144)",
                    "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps.checkIfTitleIsCorrect(PD_DiscoveryAPIv1Steps.java:25)",
                    "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps$$EnhancerByCGLIB$$98e4d262.CGLIB$checkIfTitleIsCorrect$1(<generated>)",
                    "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps$$EnhancerByCGLIB$$98e4d262$$FastClassByCGLIB$$d86197b2.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.products_and_docs.PD_DiscoveryAPIv1Steps$$EnhancerByCGLIB$$98e4d262.checkIfTitleIsCorrect(<generated>)",
                    "bla.tm.definitions.site.products_and_docs.PD_DiscoveryAPIv1Definition.checkGeneralPageElements(PD_DiscoveryAPIv1Definition.java:46)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "fExpected": "Not Found",
                  "fActual": "DISCOVERY API"
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "c67d149e-ee66-45b6-aec4-efa4f811e1b5"
              },
              "parametrisedStep": "Then check general page elements for Discovery API v1 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 407
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 11
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v1/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v1 page",
            "Then check general page elements for Discovery API v1 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partner API page",
          "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PartnerAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partner API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partner API page",
              "durationInMillis": 3116
            },
            {
              "step": "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partner API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1031
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 55
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/partner/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partner API page",
            "Then check general page elements for Partner API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "| searchRequest |\n|      test     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "searchRequest"
          ],
          "data": [
            [
              [
                "searchRequest",
                "test"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "And insert Search Parameter <searchRequest> and navigate to Search page",
          "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Search.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "searchRequest",
              "test"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2675
              },
              {
                "step": "And insert Search Parameter <searchRequest> and navigate to Search page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And insert Search Parameter ｟test｠ and navigate to Search page",
                "durationInMillis": 404
              },
              {
                "step": "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check general page elements for Search Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
                "durationInMillis": 21441
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/search/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "| searchRequest |\n|      test     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "searchRequest"
              ],
              "data": [
                [
                  [
                    "searchRequest",
                    "test"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "And insert Search Parameter <searchRequest> and navigate to Search page",
              "Then check general page elements for Search Page, where DISQUS = false and LeftMenu = false"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 2318
            },
            {
              "step": "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10279
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "Then check general page elements for Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click DirectPaymentButton element of Widgets page",
          "Then check that new page opened from Direct Payment Button has has appropriate url"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Widgets page",
              "durationInMillis": 1228
            },
            {
              "step": "When check visibility and click DirectPaymentButton element of Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When check visibility and click ｟DirectPaymentButton｠ element of Widgets page",
              "durationInMillis": 724
            },
            {
              "step": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check that new page opened from Direct Payment Button has has appropriate url",
              "durationInMillis": 1300
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/) Verification for Direct Payment Button element",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Widgets page",
            "When check visibility and click DirectPaymentButton element of Widgets page",
            "Then check that new page opened from Direct Payment Button has has appropriate url"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Checkout Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/checkout/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/event-discovery/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Countdown Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/countdown/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Calendar Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/calendar/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "WordPress Widget Learn Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/widgets/wordpress/"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Widgets page",
          "When check visibility and click <elementKey> element of Widgets page",
          "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Checkout Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/checkout/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 2141
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Checkout Widget Button｠ element of Widgets page",
                "durationInMillis": 2988
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/checkout/｠ and ｟//h1｠",
                "durationInMillis": 255
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/event-discovery/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 3129
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Discovery Widget Button｠ element of Widgets page",
                "durationInMillis": 4118
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/event-discovery/｠ and ｟//h1｠",
                "durationInMillis": 29
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Countdown Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/countdown/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 1684
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Countdown Widget Button｠ element of Widgets page",
                "durationInMillis": 2433
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/countdown/｠ and ｟//h1｠",
                "durationInMillis": 322
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Calendar Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/calendar/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 762
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Calendar Widget Button｠ element of Widgets page",
                "durationInMillis": 1430
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/calendar/｠ and ｟//h1｠",
                "durationInMillis": 49
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "WordPress Widget Learn Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/widgets/wordpress/"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Widgets page",
                "durationInMillis": 682
              },
              {
                "step": "When check visibility and click <elementKey> element of Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟WordPress Widget Learn Button｠ element of Widgets page",
                "durationInMillis": 3429
              },
              {
                "step": "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Widgets page has ｟{url}/products-and-docs/widgets/wordpress/｠ and ｟//h1｠",
                "durationInMillis": 365
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|       elementKey              |                       pageURL                     |   pageTitle    |\n|Checkout Widget Button         |  {url}/products-and-docs/widgets/checkout/        |      //h1      |\n|Discovery Widget Button        |  {url}/products-and-docs/widgets/event-discovery/ |      //h1      |\n|Countdown Widget Button        |  {url}/products-and-docs/widgets/countdown/       |      //h1      |\n|Calendar Widget Button         |  {url}/products-and-docs/widgets/calendar/        |      //h1      |\n|WordPress Widget Learn Button  |  {url}/products-and-docs/widgets/wordpress/       |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Checkout Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/checkout/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/event-discovery/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Countdown Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/countdown/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Calendar Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/calendar/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "WordPress Widget Learn Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/widgets/wordpress/"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Widgets page",
              "When check visibility and click <elementKey> element of Widgets page",
              "Then check that new page opened from Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Open Source"
              ],
              [
                "pageURL",
                "http://code.ticketmaster.com/"
              ],
              [
                "pageTitle",
                "//h1[@id='logo']"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When check visibility and click <elementKey> element of Home page",
          "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/OpenSource.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Open Source"
            ],
            [
              "pageURL",
              "http://code.ticketmaster.com/"
            ],
            [
              "pageTitle",
              "//h1[@id='logo']"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Home page",
                "durationInMillis": 2538
              },
              {
                "step": "When check visibility and click <elementKey> element of Home page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Open Source｠ element of Home page",
                "durationInMillis": 455
              },
              {
                "step": "Then check that new page opened from Home page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Home page has ｟http://code.ticketmaster.com/｠ and ｟//h1[@id='logo']｠",
                "durationInMillis": 24
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/blogs/) Verification for general page's elements",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|    elementKey    |           pageURL             |          pageTitle            |\n|    Open Source   | http://code.ticketmaster.com/ |       //h1[@id='logo']        |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Open Source"
                  ],
                  [
                    "pageURL",
                    "http://code.ticketmaster.com/"
                  ],
                  [
                    "pageTitle",
                    "//h1[@id='logo']"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Home page",
              "When check visibility and click <elementKey> element of Home page",
              "Then check that new page opened from Home page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Oauth API page",
          "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_OauthAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Oauth API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Oauth API page",
              "durationInMillis": 2402
            },
            {
              "step": "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Oauth API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 365
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/oauth/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Oauth API page",
            "Then check general page elements for Oauth API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_EventDiscovery.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 4533
            },
            {
              "step": "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Event Discovery Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 524
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then check general page elements for Event Discovery Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Certified Partners page",
          "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_CertifiedPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Certified Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Certified Partners page",
              "durationInMillis": 7358
            },
            {
              "step": "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Certified Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10314
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Certified Partners page",
            "Then check general page elements for Certified Partners Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/events/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Events page",
          "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/Events.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Events page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Events page",
              "durationInMillis": 2208
            },
            {
              "step": "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Events Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10205
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/events/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Events page",
            "Then check general page elements for Events Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Partners page",
          "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/partners/Partners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Partners page",
              "durationInMillis": 5640
            },
            {
              "step": "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Partners Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 20295
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Partners page",
            "Then check general page elements for Partners Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch page",
              "durationInMillis": 4302
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10261
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch page",
            "Then check general page elements for Tutorials EventSearch Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch page",
          "When check visibility and click <elementKey> element of Tutorials EventSearch page",
          "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1148
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 2269
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 64
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 818
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1550
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 258
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 663
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1475
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 51
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1372
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials EventSearch page",
                "durationInMillis": 1584
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 401
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 596
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1547
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 307
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials EventSearch page",
                "durationInMillis": 1042
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials EventSearch page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials EventSearch page",
                "durationInMillis": 1907
              },
              {
                "step": "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials EventSearch page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 69
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/events-search/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                elementKey               |                                 pageURL                                       |   pageTitle    |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |      //h1      |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials EventSearch page",
              "When check visibility and click <elementKey> element of Tutorials EventSearch page",
              "Then check that new page opened from Tutorials EventSearch page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
          "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventWithDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
              "durationInMillis": 4578
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 388
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 33
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_with_discovery_api_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventWithDiscoveryAPI page",
            "Then check general page elements for Tutorials EventSearch SearchEventWithDiscoveryAPI Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Calendar.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4148
            },
            {
              "step": "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Calendar Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 318
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then check general page elements for Calendar Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/distribution-partners/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Distribution Partners page",
          "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_DistributionPartners.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Distribution Partners page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Distribution Partners page",
              "durationInMillis": 4837
            },
            {
              "step": "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Distribution Partners Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 175
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/distribution-partners/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Distribution Partners page",
            "Then check general page elements for Distribution Partners Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_Countdown.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3078
            },
            {
              "step": "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Countdown Widget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 281
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 40
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then check general page elements for Countdown Widget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Top Picks API page",
          "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_TopPicksAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Top Picks API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Top Picks API page",
              "durationInMillis": 2814
            },
            {
              "step": "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Top Picks API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 368
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Top Picks API page",
            "Then check general page elements for Top Picks API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/blogs/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Blogs page",
          "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/Blogs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Blogs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Blogs page",
              "durationInMillis": 2246
            },
            {
              "step": "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Blogs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 30523
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/blogs/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Blogs page",
            "Then check general page elements for Blogs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "Then the required fields are not empty on the Calendar Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 4227
            },
            {
              "step": "Then the required fields are not empty on the Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Calendar Widget page",
              "durationInMillis": 139
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "Then the required fields are not empty on the Calendar Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And change values for: apiKey,keyword,zipCode,radius",
          "And store values of: apiKey,keyword,zipCode,radius",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2225
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 3796
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 335
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 919
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2479
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 252
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And change values for: apiKey,keyword,zipCode,radius",
            "And store values of: apiKey,keyword,zipCode,radius",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "zipCode",
            "countryName"
          ],
          "data": [
            [
              [
                "zipCode",
                "01000"
              ],
              [
                "countryName",
                "France"
              ]
            ],
            [
              [
                "zipCode",
                "K1P 1J1"
              ],
              [
                "countryName",
                "Canada"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When change value of Zip Code <zipCode>",
          "Then the Country field contains appropriate value <countryName>"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "zipCode",
              "01000"
            ],
            [
              "countryName",
              "France"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Calendar Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Calendar Widget page",
                "durationInMillis": 2030
              },
              {
                "step": "When change value of Zip Code <zipCode>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of Zip Code ｟01000｠",
                "durationInMillis": 2126
              },
              {
                "step": "Then the Country field contains appropriate value <countryName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country field contains appropriate value ｟France｠",
                "durationInMillis": 53
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          }
        },
        {
          "parameters": [
            [
              "zipCode",
              "K1P 1J1"
            ],
            [
              "countryName",
              "Canada"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Calendar Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Calendar Widget page",
                "durationInMillis": 3344
              },
              {
                "step": "When change value of Zip Code <zipCode>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of Zip Code ｟K1P 1J1｠",
                "durationInMillis": 1764
              },
              {
                "step": "Then the Country field contains appropriate value <countryName>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country field contains appropriate value ｟Canada｠",
                "durationInMillis": 77
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName  |\n |01000  |France       |\n |K1P 1J1|Canada       |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "01000"
                  ],
                  [
                    "countryName",
                    "France"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "K1P 1J1"
                  ],
                  [
                    "countryName",
                    "Canada"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Calendar Widget page",
              "When change value of Zip Code <zipCode>",
              "Then the Country field contains appropriate value <countryName>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,zipCode,radius",
          "And change values for: apiKey,keyword,zipCode,radius",
          "When click reset button",
          "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 2197
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 488
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 3193
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1882
            },
            {
              "step": "Then values of fields: apiKey,keyword,zipCode,radius equals stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then values of fields: ｟apiKey,keyword,zipCode,radius｠ equals stored values",
              "durationInMillis": 236
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,zipCode,radius",
            "And change values for: apiKey,keyword,zipCode,radius",
            "When click reset button",
            "Then values of fields: apiKey,keyword,zipCode,radius equals stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And store values of: apiKey,keyword,zipCode,radius",
          "And change values for: apiKey,keyword,zipCode,radius",
          "When click reset button on Calendar Widget Page",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 1418
            },
            {
              "step": "And store values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 637
            },
            {
              "step": "And change values for: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 3116
            },
            {
              "step": "When click reset button on Calendar Widget Page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button on Calendar Widget Page",
              "durationInMillis": 599
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 717
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2358
            },
            {
              "step": "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values of: ｟apiKey,keyword,zipCode,radius｠",
              "durationInMillis": 297
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And store values of: apiKey,keyword,zipCode,radius",
            "And change values for: apiKey,keyword,zipCode,radius",
            "When click reset button on Calendar Widget Page",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values of: apiKey,keyword,zipCode,radius"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 727
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 1451
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 833
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Calendar Widget page",
          "And enter custom ApiKey invalidApiKey123",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CalendarWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Calendar Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Calendar Widget page",
              "durationInMillis": 1740
            },
            {
              "step": "And enter custom ApiKey invalidApiKey123",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟invalidApiKey123｠",
              "durationInMillis": 383
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 2570
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 32
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/calendar/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Calendar Widget page",
            "And enter custom ApiKey invalidApiKey123",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Season Ticketing API page",
          "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SeasonTicketingAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Season Ticketing API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Season Ticketing API page",
              "durationInMillis": 2864
            },
            {
              "step": "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Season Ticketing API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 471
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Season Ticketing API page",
            "Then check general page elements for Season Ticketing API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open ChangeLog page",
          "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_ChangeLog.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open ChangeLog page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open ChangeLog page",
              "durationInMillis": 1935
            },
            {
              "step": "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for ChangeLog Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 986
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/changelog/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open ChangeLog page",
            "Then check general page elements for ChangeLog Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "When Commerce API menu has list of methods",
          "And open Getting Started page",
          "Then all the Commerce API methods are shown on Getting Started page"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 6053
            },
            {
              "step": "When Commerce API menu has list of methods",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When Commerce API menu has list of methods",
              "durationInMillis": 127884
            },
            {
              "step": "And open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And open Getting Started page",
              "durationInMillis": 998
            },
            {
              "step": "Then all the Commerce API methods are shown on Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all the Commerce API methods are shown on Getting Started page",
              "durationInMillis": 43629
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 726
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) TKMDPA-874 Commerce API links in Available Resources table",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "When Commerce API menu has list of methods",
            "And open Getting Started page",
            "Then all the Commerce API methods are shown on Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_GettingStarted.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 1511
            },
            {
              "step": "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Getting Started Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 657
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/getting-started/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then check general page elements for Getting Started Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Join The Nexus Program page",
          "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_Nexus.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Join The Nexus Program page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Join The Nexus Program page",
              "durationInMillis": 2708
            },
            {
              "step": "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Join The Nexus Program Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 279
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 45
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/certified-partners/nexus/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Join The Nexus Program page",
            "Then check general page elements for Join The Nexus Program Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/contact-us/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Contact Us page",
          "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_ContactUs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Contact Us page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Contact Us page",
              "durationInMillis": 2477
            },
            {
              "step": "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Contact Us Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10227
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 26
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/contact-us/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Contact Us page",
            "Then check general page elements for Contact Us Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Getting Started page",
          "Then Summary widget is shown for Getting Started page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Getting Started page",
              "durationInMillis": 5009
            },
            {
              "step": "Then Summary widget is shown for Getting Started page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Getting Started page",
              "durationInMillis": 139
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Getting Started page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Getting Started page",
            "Then Summary widget is shown for Getting Started page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "Then Summary widget is shown for Home page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 1826
            },
            {
              "step": "Then Summary widget is shown for Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for Home page",
              "durationInMillis": 36
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 35
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for Home page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "Then Summary widget is shown for Home page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then Summary widget is shown for API Explorer page"
        ]
      },
      "storyPath": "stories/site/widgets/SummaryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 2104
            },
            {
              "step": "Then Summary widget is shown for API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Summary widget is shown for API Explorer page",
              "durationInMillis": 39
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 29
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(summary widget) TKMDPA-870 Summary widget check for API Explorer page",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then Summary widget is shown for API Explorer page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials EventSearch SearchEventInSomeLocation page",
          "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_EventSearch_SearchEventInSomeLocation.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials EventSearch SearchEventInSomeLocation page",
              "durationInMillis": 3112
            },
            {
              "step": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 544
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/events-search/search_events_in_location_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials EventSearch SearchEventInSomeLocation page",
            "Then check general page elements for Tutorials EventSearch SearchEventInSomeLocation Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/api-explorer/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open API Explorer page",
          "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_APIExplorer.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open API Explorer page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open API Explorer page",
              "durationInMillis": 3363
            },
            {
              "step": "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for API Explorer Page, where DISQUS = ｟true｠ and LeftMenu = ｟false｠",
              "durationInMillis": 10704
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 34
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/api-explorer/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open API Explorer page",
            "Then check general page elements for API Explorer Page, where DISQUS = true and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Commerce API page",
          "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_CommerceAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Commerce API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Commerce API page",
              "durationInMillis": 6034
            },
            {
              "step": "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Commerce API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 810
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 37
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/commerce/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Commerce API page",
            "Then check general page elements for Commerce API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/faq/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open FAQ page",
          "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_FAQ.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open FAQ page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open FAQ page",
              "durationInMillis": 2891
            },
            {
              "step": "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for FAQ Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 561
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 66
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/faq/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open FAQ page",
            "Then check general page elements for FAQ Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/sdks/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open SDKs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open SDKs page",
              "durationInMillis": 2643
            },
            {
              "step": "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for SDKs Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 574
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/sdks/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open SDKs page",
            "Then check general page elements for SDKs Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(products-and-docs/sdks/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "SDK-Java Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-java"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-JavaScript Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-javascript"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ],
            [
              [
                "elementKey",
                "SDK-Scala Image"
              ],
              [
                "pageURL",
                "https://github.com/ticketmaster-api/sdk-scala"
              ],
              [
                "pageTitle",
                "//h1[@class='public ']/strong/a"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open SDKs page",
          "When check visibility and click <elementKey> element of SDKs page",
          "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_SDKs.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Java Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-java"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 1554
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Java Image｠ element of SDKs page",
                "durationInMillis": 876
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-java｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 897
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-JavaScript Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-javascript"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 1297
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-JavaScript Image｠ element of SDKs page",
                "durationInMillis": 1146
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-javascript｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 808
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "SDK-Scala Image"
            ],
            [
              "pageURL",
              "https://github.com/ticketmaster-api/sdk-scala"
            ],
            [
              "pageTitle",
              "//h1[@class='public ']/strong/a"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open SDKs page",
                "durationInMillis": 1117
              },
              {
                "step": "When check visibility and click <elementKey> element of SDKs page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟SDK-Scala Image｠ element of SDKs page",
                "durationInMillis": 1447
              },
              {
                "step": "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from SDKs page has ｟https://github.com/ticketmaster-api/sdk-scala｠ and ｟//h1[@class='public ']/strong/a｠",
                "durationInMillis": 1119
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(products-and-docs/sdks/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "elementKey           |pageURL                                            |pageTitle                       |\nSDK-Java Image       |https://github.com/ticketmaster-api/sdk-java       |//h1[@class='public ']/strong/a |\nSDK-JavaScript Image |https://github.com/ticketmaster-api/sdk-javascript |//h1[@class='public ']/strong/a |\nSDK-Scala Image      |https://github.com/ticketmaster-api/sdk-scala      |//h1[@class='public ']/strong/a |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "SDK-Java Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-java"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-JavaScript Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-javascript"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "SDK-Scala Image"
                  ],
                  [
                    "pageURL",
                    "https://github.com/ticketmaster-api/sdk-scala"
                  ],
                  [
                    "pageTitle",
                    "//h1[@class='public ']/strong/a"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open SDKs page",
              "When check visibility and click <elementKey> element of SDKs page",
              "Then check that new page opened from SDKs page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/partners/startups-and-developers/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Startups and Developers page",
          "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/partners/Partners_StartupsDevelopers.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Startups and Developers page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Startups and Developers page",
              "durationInMillis": 3283
            },
            {
              "step": "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Startups and Developers Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 1000
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/partners/startups-and-developers/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Startups and Developers page",
            "Then check general page elements for Startups and Developers Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 3005
            },
            {
              "step": "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10257
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 24
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "Then check general page elements for Tutorials Widgets Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When check visibility and click <elementKey> element of Tutorials Widgets page",
          "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 1316
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials Widgets page",
                "durationInMillis": 1813
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 36
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 590
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials Widgets page",
                "durationInMillis": 1010
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 192
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials Widgets page",
                "durationInMillis": 551
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials Widgets page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials Widgets page",
                "durationInMillis": 701
              },
              {
                "step": "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials Widgets page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 552
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/widgets/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle    |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |      //h1      |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials Widgets page",
              "When check visibility and click <elementKey> element of Tutorials Widgets page",
              "Then check that new page opened from Tutorials Widgets page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Publish API page",
          "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_PublishAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Publish API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Publish API page",
              "durationInMillis": 3849
            },
            {
              "step": "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Publish API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 269
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 138
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/publish/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Publish API page",
            "Then check general page elements for Publish API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Support page",
          "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Support page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Support page",
              "durationInMillis": 2457
            },
            {
              "step": "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Support Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 304
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 30
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Support page",
            "Then check general page elements for Support Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Check that Feedback widget Elements are shown",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And Feedback widget is not shown",
          "When click Feedback button of Tutorials Widgets page",
          "Then Feedback widget elements are shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 2080
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And Feedback widget is not shown",
              "durationInMillis": 563
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 83
            },
            {
              "step": "Then Feedback widget elements are shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then Feedback widget elements are shown",
              "durationInMillis": 1041
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Check that Feedback widget Elements are shown",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And Feedback widget is not shown",
            "When click Feedback button of Tutorials Widgets page",
            "Then Feedback widget elements are shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget Close button",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "When click Feedback button of Tutorials Widgets page",
          "Then click close button of Feedback widget",
          "And Feedback widget is not shown"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1679
            },
            {
              "step": "When click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click Feedback button of Tutorials Widgets page",
              "durationInMillis": 88
            },
            {
              "step": "Then click close button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then click close button of Feedback widget",
              "durationInMillis": 451
            },
            {
              "step": "And Feedback widget is not shown",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And Feedback widget is not shown",
              "durationInMillis": 517
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget Close button",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "When click Feedback button of Tutorials Widgets page",
            "Then click close button of Feedback widget",
            "And Feedback widget is not shown"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for NAME field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Name are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 1672
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 85
            },
            {
              "step": "When all fields except Name are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Name are populated",
              "durationInMillis": 719
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click send button of Feedback widget",
              "durationInMillis": 98
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then error notification is shown for Feedback widget",
              "durationInMillis": 28
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for NAME field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Name are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(feedback widget) Feedback widget error notifications for Email field",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets page",
          "And click Feedback button of Tutorials Widgets page",
          "When all fields except Email are populated",
          "And click send button of Feedback widget",
          "Then error notification is shown for Feedback widget"
        ]
      },
      "storyPath": "stories/site/widgets/FeedbackWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets page",
              "durationInMillis": 3042
            },
            {
              "step": "And click Feedback button of Tutorials Widgets page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click Feedback button of Tutorials Widgets page",
              "durationInMillis": 91
            },
            {
              "step": "When all fields except Email are populated",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When all fields except Email are populated",
              "durationInMillis": 886
            },
            {
              "step": "And click send button of Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click send button of Feedback widget",
              "durationInMillis": 94
            },
            {
              "step": "Then error notification is shown for Feedback widget",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then error notification is shown for Feedback widget",
              "durationInMillis": 29
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 16
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(feedback widget) Feedback widget error notifications for Email field",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets page",
            "And click Feedback button of Tutorials Widgets page",
            "When all fields except Email are populated",
            "And click send button of Feedback widget",
            "Then error notification is shown for Feedback widget"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials page",
              "durationInMillis": 2777
            },
            {
              "step": "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Page, where DISQUS = ｟false｠ and LeftMenu = ｟true｠",
              "durationInMillis": 10265
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 28
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials page",
            "Then check general page elements for Tutorials Page, where DISQUS = false and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "elementKey",
            "pageURL",
            "pageTitle"
          ],
          "data": [
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Adding Event Discovery Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Locate Event On Map Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Button"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Header Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ],
            [
              [
                "elementKey",
                "Get Started WIth Discovery API Widget Image Link"
              ],
              [
                "pageURL",
                "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
              ],
              [
                "pageTitle",
                "//h1"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials page",
          "When check visibility and click <elementKey> element of Tutorials page",
          "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 373
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Button｠ element of Tutorials page",
                "durationInMillis": 1710
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 239
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 777
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 1760
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 45
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Adding Event Discovery Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 846
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Adding Event Discovery Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 3829
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html｠ and ｟//h1｠",
                "durationInMillis": 67
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2029
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Button｠ element of Tutorials page",
                "durationInMillis": 4103
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 37
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 2644
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 3249
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 46
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Locate Event On Map Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 1324
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Locate Event On Map Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 2325
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_in_location.html｠ and ｟//h1｠",
                "durationInMillis": 99
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Button"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 610
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Button｠ element of Tutorials page",
                "durationInMillis": 2106
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 430
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Header Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 586
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Header Link｠ element of Tutorials page",
                "durationInMillis": 3230
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 327
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        },
        {
          "parameters": [
            [
              "elementKey",
              "Get Started WIth Discovery API Widget Image Link"
            ],
            [
              "pageURL",
              "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
            ],
            [
              "pageTitle",
              "//h1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Tutorials page",
                "durationInMillis": 512
              },
              {
                "step": "When check visibility and click <elementKey> element of Tutorials page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When check visibility and click ｟Get Started WIth Discovery API Widget Image Link｠ element of Tutorials page",
                "durationInMillis": 1289
              },
              {
                "step": "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then check that new page opened from Tutorials page has ｟{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html｠ and ｟//h1｠",
                "durationInMillis": 121
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/tutorials/) Verification for all the page's links",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|                 elementKey              |                            pageURL                                   |   pageTitle  |\n|   Adding Event Discovery Widget Button  |{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|Adding Event Discovery Widget Header Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n| Adding Event Discovery Widget Image Link|{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html |     //h1     |\n|    Locate Event On Map Widget Button    |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|  Locate Event On Map Widget Header Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Locate Event On Map Widget Image Link |{url}/products-and-docs/tutorials/events-search/search_events_in_location.html |     //h1     |\n|   Get Started WIth Discovery API Widget Button  |{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n|Get Started WIth Discovery API Widget Header Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |\n| Get Started WIth Discovery API Widget Image Link|{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html |     //h1     |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "elementKey",
                "pageURL",
                "pageTitle"
              ],
              "data": [
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Adding Event Discovery Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/widgets/Event_Discovery_Widget.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Locate Event On Map Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_in_location.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Button"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Header Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ],
                [
                  [
                    "elementKey",
                    "Get Started WIth Discovery API Widget Image Link"
                  ],
                  [
                    "pageURL",
                    "{url}/products-and-docs/tutorials/events-search/search_events_with_discovery_api.html"
                  ],
                  [
                    "pageTitle",
                    "//h1"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Tutorials page",
              "When check visibility and click <elementKey> element of Tutorials page",
              "Then check that new page opened from Tutorials page has <pageURL> and <pageTitle>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "Then the required fields are not empty on the Countdown Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2900
            },
            {
              "step": "Then the required fields are not empty on the Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty on the Countdown Widget page",
              "durationInMillis": 198
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 114
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that required fields are not empty",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "Then the required fields are not empty on the Countdown Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1304
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 129
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 871
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2394
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 132
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Verification of default embed code",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2191
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 604
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 93
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 707
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2713
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 105
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 18
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "Then the ApiKey and EventId fields have stored values"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3263
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 103
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 404
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 62
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 1737
            },
            {
              "step": "Then the ApiKey and EventId fields have stored values",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the ApiKey and EventId fields have stored values",
              "durationInMillis": 61
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 20
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "Then the ApiKey and EventId fields have stored values"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And store ApiKey and EventId on Countdown Widget page",
          "And change value for ApiKey and EventId on Countdown Widget page",
          "When submit form",
          "And click reset button",
          "And click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored ApiKey and EventId"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 2714
            },
            {
              "step": "And store ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 379
            },
            {
              "step": "And change value for ApiKey and EventId on Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change value for ApiKey and EventId on Countdown Widget page",
              "durationInMillis": 477
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 114
            },
            {
              "step": "And click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click reset button",
              "durationInMillis": 1717
            },
            {
              "step": "And click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And click on \"Get code\" button",
              "durationInMillis": 683
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2387
            },
            {
              "step": "And embedded html code contains stored ApiKey and EventId",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored ApiKey and EventId",
              "durationInMillis": 124
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 17
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check RESET button functionality on Embedded Code Pop-up window",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And store ApiKey and EventId on Countdown Widget page",
            "And change value for ApiKey and EventId on Countdown Widget page",
            "When submit form",
            "And click reset button",
            "And click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored ApiKey and EventId"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When User is logged to site (Countdown Widget)",
          "And get eventId by keyword ADELE",
          "And set first eventId from list",
          "Then the event poster contains ADELE"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3229
            },
            {
              "step": "When User is logged to site (Countdown Widget)",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "When User is logged to site (Countdown Widget)",
                "cause": {
                  "@class": "net.serenitybdd.core.exceptions.SerenityManagedException",
                  "detailMessage": "org.openqa.selenium.NoSuchElementException: Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-fa3eccb0-e91e-4528-ae8f-78df9e34e364', ip: '172.17.0.8', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                  "cause": {
                    "@class": "org.openqa.selenium.NoSuchElementException",
                    "@defined-in": "java.lang.Throwable",
                    "detailMessage": "Timed out after 5 seconds. Element not found",
                    "stackTrace": [
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                      "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                      "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:177)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:313)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:687)",
                      "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:999)",
                      "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                      "com.sun.proxy.$Proxy22.click(Unknown Source)",
                      "bla.tm.steps.pantheon.UserAccountSteps.getAPIKeyOfUser(UserAccountSteps.java:14)",
                      "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.CGLIB$getAPIKeyOfUser$2(<generated>)",
                      "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7$$FastClassByCGLIB$$4ade5d30.invoke(<generated>)",
                      "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                      "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                      "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                      "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                      "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                      "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                      "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.getAPIKeyOfUser(<generated>)",
                      "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.openLogInPageAndLogIn(CountdownWidgetDefinition.java:92)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                      "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                      "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                      "java.lang.reflect.Method.invoke(Method.java:483)",
                      "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                      "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                      "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                      "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                      "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                      "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                      "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                      "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                      "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                      "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                      "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                      "java.lang.Thread.run(Thread.java:745)"
                    ],
                    "suppressedExceptions": [
                      [],
                      []
                    ],
                    "extraInfo": [
                      [
                        "Driver info",
                        "driver.version: unknown"
                      ]
                    ]
                  },
                  "stackTrace": [
                    "net.serenitybdd.core.exceptions.SerenityManagedException.detachedCopyOf(SerenityManagedException.java:20)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:341)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.getAPIKeyOfUser(<generated>)",
                    "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.openLogInPageAndLogIn(CountdownWidgetDefinition.java:92)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "detailedMessage": "Timed out after 5 seconds. Element not found\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '2.53.0', revision: '35ae25b1534ae328c771e0856c93e187490ca824', time: '2016-03-15 10:43:46'\nSystem info: host: 'testing-docker-fa3eccb0-e91e-4528-ae8f-78df9e34e364', ip: '172.17.0.8', os.name: 'Linux', os.arch: 'amd64', os.version: '4.8.12-040812-generic', java.version: '1.8.0_31'\nDriver info: driver.version: unknown",
                  "stackTrace": [
                    "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.ajaxFindElement(SmartAjaxElementLocator.java:150)",
                    "net.thucydides.core.annotations.locators.SmartAjaxElementLocator.findElement(SmartAjaxElementLocator.java:102)",
                    "net.serenitybdd.core.pages.WebElementResolverByElementLocator.resolveForDriver(WebElementResolverByElementLocator.java:27)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.getElement(WebElementFacadeImpl.java:177)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.withTimeoutOf(WebElementFacadeImpl.java:313)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.waitUntilElementAvailable(WebElementFacadeImpl.java:687)",
                    "net.serenitybdd.core.pages.WebElementFacadeImpl.click(WebElementFacadeImpl.java:999)",
                    "sun.reflect.GeneratedMethodAccessor8.invoke(Unknown Source)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "net.thucydides.core.annotations.locators.AbstractSingleItemHandler.invoke(AbstractSingleItemHandler.java:45)",
                    "com.sun.proxy.$Proxy22.click(Unknown Source)",
                    "bla.tm.steps.pantheon.UserAccountSteps.getAPIKeyOfUser(UserAccountSteps.java:14)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.CGLIB$getAPIKeyOfUser$2(<generated>)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7$$FastClassByCGLIB$$4ade5d30.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.getAPIKeyOfUser(<generated>)",
                    "bla.tm.definitions.site.widgets.CountdownWidgetDefinition.openLogInPageAndLogIn(CountdownWidgetDefinition.java:92)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "exceptionClass": "org.openqa.selenium.NoSuchElementException"
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "96903a90-07f5-499e-9d5e-e8f3da3f1050"
              },
              "parametrisedStep": "When User is logged to site (Countdown Widget)",
              "durationInMillis": 13551
            },
            {
              "step": "And get eventId by keyword ADELE",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "And get eventId by keyword ｟ADELE｠",
              "durationInMillis": 0
            },
            {
              "step": "And set first eventId from list",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "And set first eventId from list",
              "durationInMillis": 0
            },
            {
              "step": "Then the event poster contains ADELE",
              "type": "NOT_PERFORMED",
              "parametrisedStep": "Then the event poster contains ｟ADELE｠",
              "durationInMillis": 0
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 3
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Get new EventId",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When User is logged to site (Countdown Widget)",
            "And get eventId by keyword ADELE",
            "And set first eventId from list",
            "Then the event poster contains ADELE"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 3845
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 128
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 1815
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 124
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "NOT_PERFORMED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to full-width",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored theme"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1927
            },
            {
              "step": "And switch to VISUAL Tab",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And switch to VISUAL Tab",
              "durationInMillis": 991
            },
            {
              "step": "And set theme to full-width",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And set theme to full-width",
              "durationInMillis": 499
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 1464
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2196
            },
            {
              "step": "And embedded html code contains stored theme",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored theme",
              "durationInMillis": 108
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 21
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Full-width mode",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And switch to VISUAL Tab",
            "And set theme to full-width",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored theme"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1264
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 959
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 391
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 773
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 783
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2328
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 208
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1655
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 854
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 477
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 742
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 935
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2574
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 180
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2203
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 839
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 396
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 718
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 742
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2760
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 70
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 2572
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 695
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 473
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 767
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 897
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2508
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 68
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Countdown Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Countdown Widget page",
                "durationInMillis": 1646
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 739
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 411
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 796
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 849
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2420
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 66
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/countdown/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Countdown Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom ApiKey {InvalidApiKey123}",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1364
            },
            {
              "step": "And enter custom ApiKey {InvalidApiKey123}",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom ApiKey ｟{InvalidApiKey123}｠",
              "durationInMillis": 477
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 80
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 517
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 36
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid API Key",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom ApiKey {InvalidApiKey123}",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Countdown Widget page",
          "And enter custom EventId \"invalidEventId123\"",
          "When submit form",
          "Then the event message is shown \"No results were found\""
        ]
      },
      "storyPath": "stories/site/widgets/CountdownWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Countdown Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Countdown Widget page",
              "durationInMillis": 1268
            },
            {
              "step": "And enter custom EventId \"invalidEventId123\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And enter custom EventId ｟\"invalidEventId123\"｠",
              "durationInMillis": 436
            },
            {
              "step": "When submit form",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When submit form",
              "durationInMillis": 106
            },
            {
              "step": "Then the event message is shown \"No results were found\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"No results were found\"",
              "durationInMillis": 675
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 31
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/countdown/) Event message - Check event message for invalid Event ID",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Countdown Widget page",
            "And enter custom EventId \"invalidEventId123\"",
            "When submit form",
            "Then the event message is shown \"No results were found\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Tutorials Widgets EventDiscoveryWidget page",
          "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Tutorials_Widgets_EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Tutorials Widgets EventDiscoveryWidget page",
              "durationInMillis": 2941
            },
            {
              "step": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 478
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 68
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/tutorials/widgets/Event_Discovery_Widget_html) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Tutorials Widgets EventDiscoveryWidget page",
            "Then check general page elements for Tutorials Widgets EventDiscoveryWidget Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Universal Checkout page",
          "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_Widget_UniversalCheckout.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Universal Checkout page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Universal Checkout page",
              "durationInMillis": 3579
            },
            {
              "step": "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Universal Checkout Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 651
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/checkout/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Universal Checkout page",
            "Then check general page elements for Universal Checkout Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open International Discovery API page",
          "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InternationalDiscoveryAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open International Discovery API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open International Discovery API page",
              "durationInMillis": 4795
            },
            {
              "step": "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for International Discovery API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 2153
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 39
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/international-discovery/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open International Discovery API page",
            "Then check general page elements for International Discovery API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "Then the required fields are not empty and have default values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 5636
            },
            {
              "step": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the required fields are not empty and have default values on the Event Discovery Widget page",
              "durationInMillis": 157
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 22
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that required fields are not empty and have default values",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "Then the required fields are not empty and have default values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change values for all possible fields on the Event Discovery Widget page",
          "And store all fields values on the Event Discovery Widget page",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored values on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 3453
            },
            {
              "step": "And change values for all possible fields on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
              "durationInMillis": 8026
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 700
            },
            {
              "step": "When click on \"Get code\" button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click on \"Get code\" button",
              "durationInMillis": 909
            },
            {
              "step": "Then the pop-up Embedded Code is opened",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the pop-up Embedded Code is opened",
              "durationInMillis": 2687
            },
            {
              "step": "And embedded html code contains stored values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And embedded html code contains stored values on the Event Discovery Widget page",
              "durationInMillis": 1030
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 43
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that embed code functionality works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And change values for all possible fields on the Event Discovery Widget page",
            "And store all fields values on the Event Discovery Widget page",
            "When click on \"Get code\" button",
            "Then the pop-up Embedded Code is opened",
            "And embedded html code contains stored values on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "zipCode",
            "countryName"
          ],
          "data": [
            [
              [
                "zipCode",
                "NW1"
              ],
              [
                "countryName",
                "United Kingdom"
              ]
            ],
            [
              [
                "zipCode",
                "40104"
              ],
              [
                "countryName",
                "United States"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
          "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "zipCode",
              "NW1"
            ],
            [
              "countryName",
              "United Kingdom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2709
              },
              {
                "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟NW1｠ on Event Discovery Widget Page",
                "durationInMillis": 1079
              },
              {
                "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country Field contains appropriate value ｟United Kingdom｠ on Event Discovery Widget Page",
                "durationInMillis": 2768
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          }
        },
        {
          "parameters": [
            [
              "zipCode",
              "40104"
            ],
            [
              "countryName",
              "United States"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3675
              },
              {
                "step": "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When change value of ZipCode ｟40104｠ on Event Discovery Widget Page",
                "durationInMillis": 929
              },
              {
                "step": "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the Country Field contains appropriate value ｟United States｠ on Event Discovery Widget Page",
                "durationInMillis": 1553
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that Country field is changed accordingly Zip Code",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|zipCode|countryName   |\n|NW1    |United Kingdom|\n|40104  |United States |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "zipCode",
                "countryName"
              ],
              "data": [
                [
                  [
                    "zipCode",
                    "NW1"
                  ],
                  [
                    "countryName",
                    "United Kingdom"
                  ]
                ],
                [
                  [
                    "zipCode",
                    "40104"
                  ],
                  [
                    "countryName",
                    "United States"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When change value of ZipCode <zipCode> on Event Discovery Widget Page",
              "Then the Country Field contains appropriate value <countryName> on Event Discovery Widget Page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "keyword"
          ],
          "data": [
            [
              [
                "keyword",
                "ADELE"
              ]
            ],
            [
              [
                "keyword",
                "STING"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword <keyword> on Event Discovery Widget page",
          "Then found events contains <keyword> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "keyword",
              "ADELE"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3736
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 319
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟ADELE｠ on Event Discovery Widget page",
                "durationInMillis": 2765
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "keyword",
              "STING"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2541
              },
              {
                "step": "When search events by keyword <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When search events by keyword ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 390
              },
              {
                "step": "Then found events contains <keyword> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then found events contains ｟STING｠ on Event Discovery Widget page",
                "durationInMillis": 2285
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that KEYWORD field functionality works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|keyword|\n|ADELE  |\n|STING  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "keyword"
              ],
              "data": [
                [
                  [
                    "keyword",
                    "ADELE"
                  ]
                ],
                [
                  [
                    "keyword",
                    "STING"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When search events by keyword <keyword> on Event Discovery Widget page",
              "Then found events contains <keyword> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|\n| 1   |\n| 100 |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value"
          ],
          "data": [
            [
              [
                "value",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals or less than Event Count <value>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 1796
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 2598
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟1｠",
                "durationInMillis": 51
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 3969
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2345
              },
              {
                "step": "Then the number of events equals or less than Event Count <value>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals or less than Event Count ｟100｠",
                "durationInMillis": 1885
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that EVENT COUNT works properly",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|\n| 1   |\n| 100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value"
              ],
              "data": [
                [
                  [
                    "value",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals or less than Event Count <value>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "value",
            "actualValue"
          ],
          "data": [
            [
              [
                "value",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "value",
                "100"
              ],
              [
                "actualValue",
                "100"
              ]
            ],
            [
              [
                "value",
                "101"
              ],
              [
                "actualValue",
                "100"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When set Event Count <value> on Event Discovery Widget page",
          "Then the number of events equals Event Count <actualValue>"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "value",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 881
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 3495
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 122
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 1189
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 3922
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟1｠",
                "durationInMillis": 91
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "100"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2223
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟100｠ on Event Discovery Widget page",
                "durationInMillis": 2768
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 83
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        },
        {
          "parameters": [
            [
              "value",
              "101"
            ],
            [
              "actualValue",
              "100"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 794
              },
              {
                "step": "When set Event Count <value> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Event Count ｟101｠ on Event Discovery Widget page",
                "durationInMillis": 3534
              },
              {
                "step": "Then the number of events equals Event Count <actualValue>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the number of events equals Event Count ｟100｠",
                "durationInMillis": 118
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of EVENT COUNT",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|value|actualValue|\n|0    |     1     |\n|1    |     1     |\n|100  |     100   |\n|101  |     100   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "value",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "value",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "value",
                    "100"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ],
                [
                  [
                    "value",
                    "101"
                  ],
                  [
                    "actualValue",
                    "100"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "When set Event Count <value> on Event Discovery Widget page",
              "Then the number of events equals Event Count <actualValue>"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "setValue",
            "actualValue"
          ],
          "data": [
            [
              [
                "setValue",
                "0"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "1"
              ],
              [
                "actualValue",
                "1"
              ]
            ],
            [
              [
                "setValue",
                "19999"
              ],
              [
                "actualValue",
                "19999"
              ]
            ],
            [
              [
                "setValue",
                "20000"
              ],
              [
                "actualValue",
                "19999"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And change value of ZipCode 90015 on Event Discovery Widget Page",
          "When set Radius <setValue> on Event Discovery Widget page",
          "Then Radius value is <actualValue> on Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "setValue",
              "0"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 777
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 2214
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟0｠ on Event Discovery Widget page",
                "durationInMillis": 954
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 83
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "1"
            ],
            [
              "actualValue",
              "1"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 901
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 2474
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 324
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟1｠ on Event Discovery Widget page",
                "durationInMillis": 83
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "19999"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 885
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 2289
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 400
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 121
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        },
        {
          "parameters": [
            [
              "setValue",
              "20000"
            ],
            [
              "actualValue",
              "19999"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 950
              },
              {
                "step": "And change value of ZipCode 90015 on Event Discovery Widget Page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And change value of ZipCode ｟90015｠ on Event Discovery Widget Page",
                "durationInMillis": 2299
              },
              {
                "step": "When set Radius <setValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When set Radius ｟20000｠ on Event Discovery Widget page",
                "durationInMillis": 631
              },
              {
                "step": "Then Radius value is <actualValue> on Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then Radius value is ｟19999｠ on Event Discovery Widget page",
                "durationInMillis": 107
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check boundary values of RADIUS",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|setValue|actualValue|\n|   0    |     1     |\n|   1    |     1     |\n| 19999  |   19999   |\n| 20000  |   19999   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "setValue",
                "actualValue"
              ],
              "data": [
                [
                  [
                    "setValue",
                    "0"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "1"
                  ],
                  [
                    "actualValue",
                    "1"
                  ]
                ],
                [
                  [
                    "setValue",
                    "19999"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ],
                [
                  [
                    "setValue",
                    "20000"
                  ],
                  [
                    "actualValue",
                    "19999"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And change value of ZipCode 90015 on Event Discovery Widget Page",
              "When set Radius <setValue> on Event Discovery Widget page",
              "Then Radius value is <actualValue> on Event Discovery Widget page"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And store all fields values on the Event Discovery Widget page",
          "And change values for all possible fields on the Event Discovery Widget page",
          "When click reset button",
          "Then all fields have been reseted to defaults on the Event Discovery Widget page"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 865
            },
            {
              "step": "And store all fields values on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And store all fields values on the Event Discovery Widget page",
              "durationInMillis": 2541
            },
            {
              "step": "And change values for all possible fields on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "And change values for all possible fields on the Event Discovery Widget page",
              "durationInMillis": 7902
            },
            {
              "step": "When click reset button",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When click reset button",
              "durationInMillis": 1741
            },
            {
              "step": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then all fields have been reseted to defaults on the Event Discovery Widget page",
              "durationInMillis": 656
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 41
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check that RESET button works properly",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "And store all fields values on the Event Discovery Widget page",
            "And change values for all possible fields on the Event Discovery Widget page",
            "When click reset button",
            "Then all fields have been reseted to defaults on the Event Discovery Widget page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When I click on the 'Get your own' link to get api key",
          "Then The page is opened with url https://developer-acct.ticketmaster.com"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 2943
            },
            {
              "step": "When I click on the 'Get your own' link to get api key",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When I click on the 'Get your own' link to get api key",
              "durationInMillis": 248
            },
            {
              "step": "Then The page is opened with url https://developer-acct.ticketmaster.com",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then The page is opened with url ｟https://developer-acct.ticketmaster.com｠",
              "durationInMillis": 870
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 27
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) TECHNICAL TAB - Check links",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When I click on the 'Get your own' link to get api key",
            "Then The page is opened with url https://developer-acct.ticketmaster.com"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "layoutResolution"
          ],
          "data": [
            [
              [
                "layoutResolution",
                "300x600"
              ]
            ],
            [
              [
                "layoutResolution",
                "300x250"
              ]
            ],
            [
              [
                "layoutResolution",
                "custom"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout resolution to <layoutResolution>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout resolution"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "layoutResolution",
              "300x600"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 877
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 2482
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 441
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x600｠",
                "durationInMillis": 1189
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 932
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2329
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 235
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "300x250"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2501
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 984
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 383
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟300x250｠",
                "durationInMillis": 718
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1303
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2390
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 181
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        },
        {
          "parameters": [
            [
              "layoutResolution",
              "custom"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 2182
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 910
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 401
              },
              {
                "step": "And set layout resolution to <layoutResolution>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout resolution to ｟custom｠",
                "durationInMillis": 695
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 866
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2311
              },
              {
                "step": "And embedded html code contains stored layout resolution",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout resolution",
                "durationInMillis": 79
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Resolutions",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|layoutResolution|\n|300x600         |\n|300x250         |\n|custom          |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "layoutResolution"
              ],
              "data": [
                [
                  [
                    "layoutResolution",
                    "300x600"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "300x250"
                  ]
                ],
                [
                  [
                    "layoutResolution",
                    "custom"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout resolution to <layoutResolution>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout resolution"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "orientation"
          ],
          "data": [
            [
              [
                "orientation",
                "horizontal"
              ]
            ],
            [
              [
                "orientation",
                "vertical"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "And switch to VISUAL Tab",
          "And set theme to poster",
          "And set layout orientation to <orientation>",
          "When click on \"Get code\" button",
          "Then the pop-up Embedded Code is opened",
          "And embedded html code contains stored layout orientation"
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "orientation",
              "horizontal"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 766
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1816
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 382
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟horizontal｠",
                "durationInMillis": 738
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 862
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2275
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 81
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        },
        {
          "parameters": [
            [
              "orientation",
              "vertical"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given open Event Discovery Widget page",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Given open Event Discovery Widget page",
                "durationInMillis": 812
              },
              {
                "step": "And switch to VISUAL Tab",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And switch to VISUAL Tab",
                "durationInMillis": 1964
              },
              {
                "step": "And set theme to poster",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set theme to poster",
                "durationInMillis": 394
              },
              {
                "step": "And set layout orientation to <orientation>",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And set layout orientation to ｟vertical｠",
                "durationInMillis": 725
              },
              {
                "step": "When click on \"Get code\" button",
                "type": "SUCCESSFUL",
                "parametrisedStep": "When click on \"Get code\" button",
                "durationInMillis": 1007
              },
              {
                "step": "Then the pop-up Embedded Code is opened",
                "type": "SUCCESSFUL",
                "parametrisedStep": "Then the pop-up Embedded Code is opened",
                "durationInMillis": 2309
              },
              {
                "step": "And embedded html code contains stored layout orientation",
                "type": "SUCCESSFUL",
                "parametrisedStep": "And embedded html code contains stored layout orientation",
                "durationInMillis": 236
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": []
          },
          "scenario": {
            "title": "(/products-and-docs/widgets/event-discovery/) VISUAL TAB - Check Layout Orientations",
            "meta": {
              "properties": []
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|orientation|\n|horizontal |\n|vertical   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "orientation"
              ],
              "data": [
                [
                  [
                    "orientation",
                    "horizontal"
                  ]
                ],
                [
                  [
                    "orientation",
                    "vertical"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given open Event Discovery Widget page",
              "And switch to VISUAL Tab",
              "And set theme to poster",
              "And set layout orientation to <orientation>",
              "When click on \"Get code\" button",
              "Then the pop-up Embedded Code is opened",
              "And embedded html code contains stored layout orientation"
            ]
          }
        }
      ],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Event Discovery Widget page",
          "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
          "Then the event message is shown \"Here other options for you.\""
        ]
      },
      "storyPath": "stories/site/widgets/EventDiscoveryWidget.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Event Discovery Widget page",
              "durationInMillis": 2311
            },
            {
              "step": "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When search events by keyword ｟ABRAKADABRA｠ on Event Discovery Widget page",
              "durationInMillis": 385
            },
            {
              "step": "Then the event message is shown \"Here other options for you.\"",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then the event message is shown \"Here other options for you.\"",
              "durationInMillis": 661
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 38
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 1
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/widgets/event-discovery/) Event message - Check event message for invalid Keyword",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Event Discovery Widget page",
            "When search events by keyword ABRAKADABRA on Event Discovery Widget page",
            "Then the event message is shown \"Here other options for you.\""
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon Request New Password page from LogIn page",
          "Then check general page elements for Pantheon Request New Password page"
        ]
      },
      "storyPath": "stories/site/pantheon/RequestNewPassword.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2596
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1002
            },
            {
              "step": "When navigate to Pantheon Request New Password page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon Request New Password page from LogIn page",
              "durationInMillis": 460
            },
            {
              "step": "Then check general page elements for Pantheon Request New Password page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Pantheon Request New Password page",
              "durationInMillis": 20351
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 19
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/password) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon Request New Password page from LogIn page",
            "Then check general page elements for Pantheon Request New Password page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Home page",
          "When navigate to Pantheon LogIn page from Home page",
          "When navigate to Pantheon User Account page from LogIn page",
          "Then check general page elements for Pantheon User Account page"
        ]
      },
      "storyPath": "stories/site/pantheon/UserAccount.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Home page",
              "durationInMillis": 2448
            },
            {
              "step": "When navigate to Pantheon LogIn page from Home page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon LogIn page from Home page",
              "durationInMillis": 1036
            },
            {
              "step": "When navigate to Pantheon User Account page from LogIn page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "When navigate to Pantheon User Account page from LogIn page",
              "durationInMillis": 2212
            },
            {
              "step": "Then check general page elements for Pantheon User Account page",
              "type": "FAILED",
              "throwable": {
                "detailMessage": "Then check general page elements for Pantheon User Account page",
                "cause": {
                  "@class": "org.junit.ComparisonFailure",
                  "detailMessage": "",
                  "stackTrace": [
                    "org.junit.Assert.assertEquals(Assert.java:115)",
                    "org.junit.Assert.assertEquals(Assert.java:144)",
                    "bla.tm.steps.pantheon.UserAccountSteps.checkIfTitleIsCorrect(UserAccountSteps.java:25)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.CGLIB$checkIfTitleIsCorrect$0(<generated>)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7$$FastClassByCGLIB$$4ade5d30.invoke(<generated>)",
                    "net.sf.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)",
                    "net.thucydides.core.steps.StepInterceptor.invokeMethod(StepInterceptor.java:372)",
                    "net.thucydides.core.steps.StepInterceptor.executeTestStepMethod(StepInterceptor.java:357)",
                    "net.thucydides.core.steps.StepInterceptor.runTestStep(StepInterceptor.java:332)",
                    "net.thucydides.core.steps.StepInterceptor.testStepResult(StepInterceptor.java:134)",
                    "net.thucydides.core.steps.StepInterceptor.intercept(StepInterceptor.java:61)",
                    "bla.tm.steps.pantheon.UserAccountSteps$$EnhancerByCGLIB$$5ae2b8a7.checkIfTitleIsCorrect(<generated>)",
                    "bla.tm.definitions.site.pantheon.UserAccountDefinition.checkGeneralPageElements(UserAccountDefinition.java:27)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)",
                    "sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)",
                    "sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)",
                    "java.lang.reflect.Method.invoke(Method.java:483)",
                    "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:599)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                    "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                    "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                    "java.lang.Thread.run(Thread.java:745)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "fExpected": "THESE ARE YOUR APPS!\nEXPLORE THEM!",
                  "fActual": "There are no applications here.\nCreate something!"
                },
                "stackTrace": [
                  "org.jbehave.core.steps.StepCreator$ParametrisedStep.perform(StepCreator.java:617)",
                  "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:340)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1072)",
                  "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:938)",
                  "org.jbehave.core.embedder.PerformableTree$NormalPerformableScenario.perform(PerformableTree.java:977)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:887)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:811)",
                  "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:784)",
                  "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:416)",
                  "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:387)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:291)",
                  "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:265)",
                  "java.util.concurrent.FutureTask.run(FutureTask.java:266)",
                  "java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)",
                  "java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)",
                  "java.lang.Thread.run(Thread.java:745)"
                ],
                "suppressedExceptions": [
                  [],
                  []
                ],
                "uuid": "31fdd8ce-2a74-4a6f-8e13-2bf1d1057b26"
              },
              "parametrisedStep": "Then check general page elements for Pantheon User Account page",
              "durationInMillis": 491
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 3
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioFailure()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": [
            {
              "@name": "debug",
              "@value": ""
            }
          ]
        },
        "scenario": {
          "title": "(developer-acct.ticketmaster.com/user/1554/apps) Verification for general page's elements [Login - Password field - enter valid password]",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Home page",
            "When navigate to Pantheon LogIn page from Home page",
            "When navigate to Pantheon User Account page from LogIn page",
            "Then check general page elements for Pantheon User Account page"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "FAILED"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Discovery API v2 page",
          "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_DiscoveryAPIV2.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Discovery API v2 page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Discovery API v2 page",
              "durationInMillis": 4814
            },
            {
              "step": "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Discovery API v2 Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 2022
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 40
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/discovery/v2/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Discovery API v2 page",
            "Then check general page elements for Discovery API v2 Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Products and Docs page",
          "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Products and Docs page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Products and Docs page",
              "durationInMillis": 3915
            },
            {
              "step": "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Products and Docs Page, where DISQUS = ｟false｠ and LeftMenu = ｟false｠",
              "durationInMillis": 40298
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 25
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Products and Docs page",
            "Then check general page elements for Products and Docs Page, where DISQUS = false and LeftMenu = false"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Inventory Status API page",
          "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/products_and_docs/PD_InventoryStatusAPI.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Inventory Status API page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Inventory Status API page",
              "durationInMillis": 3283
            },
            {
              "step": "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Inventory Status API Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 219
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 231
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/products-and-docs/apis/inventory-status/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Inventory Status API page",
            "Then check general page elements for Inventory Status API Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    },
    {
      "scenario": {
        "title": "(/support/branding-guide/) Verification for general page's elements",
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [],
          "data": [],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given open Branding Guide page",
          "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
        ]
      },
      "storyPath": "stories/site/support/Support_BrandingGuide.story",
      "allowed": true,
      "normalPerformableScenario": {
        "parameters": [],
        "givenStories": [],
        "beforeSteps": {
          "matches": []
        },
        "steps": {
          "matches": [],
          "results": [
            {
              "step": "Given open Branding Guide page",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Given open Branding Guide page",
              "durationInMillis": 2398
            },
            {
              "step": "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true",
              "type": "SUCCESSFUL",
              "parametrisedStep": "Then check general page elements for Branding Guide Page, where DISQUS = ｟true｠ and LeftMenu = ｟true｠",
              "durationInMillis": 354
            }
          ]
        },
        "afterSteps": {
          "matches": [],
          "results": [
            {
              "step": "bla.tm.postconditions.After_User_Scenario.clearCookiesAndLocalStorage()",
              "type": "SUCCESSFUL",
              "durationInMillis": 23
            },
            {
              "step": "bla.tm.postconditions.After_User_Scenario.afterScenarioSuccess()",
              "type": "SUCCESSFUL",
              "durationInMillis": 0
            },
            {
              "step": "",
              "type": "SKIPPED",
              "durationInMillis": 0
            }
          ]
        },
        "storyAndScenarioMeta": {
          "properties": []
        },
        "scenario": {
          "title": "(/support/branding-guide/) Verification for general page's elements",
          "meta": {
            "properties": []
          },
          "givenStories": {
            "givenStories": [],
            "givenStoriesAsString": "",
            "examplesTable": {
              "tableAsString": "",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [],
              "data": [],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            }
          },
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          },
          "steps": [
            "Given open Branding Guide page",
            "Then check general page elements for Branding Guide Page, where DISQUS = true and LeftMenu = true"
          ]
        }
      },
      "examplePerformableScenarios": [],
      "status": "SUCCESSFUL"
    }
  ]
}}